<?xml version="1.0" encoding="utf-8"?>
<root>
	<metadata name="Common Public License Copyright Notice" xml:space="preserve">
		<value>
			Natural Object-Role Modeling Architect for Visual Studio

			Copyright © Neumont University. All rights reserved.
			Copyright © ORM Solutions, LLC. All rights reserved.

			The use and distribution terms for this software are covered by the
			Common Public License 1.0 (http://opensource.org/licenses/cpl) which
			can be found in the file CPL.txt at the root of this distribution.
			By using this software in any fashion, you are agreeing to be bound by
			the terms of this license.

			You must not remove this notice, or any other, from this software.
		</value>
	</metadata>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ConstraintModality.Alethic" xml:space="preserve">
		<value>Alethic</value>
	</data>
	<data name="ConstraintModality.Deontic" xml:space="preserve">
		<value>Deontic</value>
	</data>
	<data name="DerivationCompleteness.FullyDerived" xml:space="preserve">
		<value>Fully Derived</value>
	</data>
	<data name="DerivationCompleteness.PartiallyDerived" xml:space="preserve">
		<value>Partially Derived</value>
	</data>
	<data name="DerivationStorage.NotStored" xml:space="preserve">
		<value>Not Stored</value>
	</data>
	<data name="DerivationStorage.Stored" xml:space="preserve">
		<value>Stored</value>
	</data>
	<data name="DerivationExpressionStorageType.Derived" xml:space="preserve">
		<value>Derived</value>
	</data>
	<data name="DerivationExpressionStorageType.DerivedAndStored" xml:space="preserve">
		<value>Derived and Stored</value>
	</data>
	<data name="DerivationExpressionStorageType.PartiallyDerived" xml:space="preserve">
		<value>Asserted or Derived</value>
	</data>
	<data name="DerivationExpressionStorageType.PartiallyDerivedAndStored" xml:space="preserve">
		<value>Asserted, or Derived and Stored</value>
	</data>
	<data name="EffectiveReferenceModeNamingChoice.CustomFormat" xml:space="preserve">
		<value>Custom Format</value>
		<comment>The displayed form of the CustomFormat enum value</comment>
	</data>
	<data name="EffectiveReferenceModeNamingChoice.EntityTypeName" xml:space="preserve">
		<value>EntityType Name</value>
		<comment>The displayed form of the EntityTypeName enum value</comment>
	</data>
	<data name="EffectiveReferenceModeNamingChoice.ReferenceModeName" xml:space="preserve">
		<value>ReferenceMode Name</value>
		<comment>The displayed form of the ReferenceModeName enum value</comment>
	</data>
	<data name="EffectiveReferenceModeNamingChoice.ValueTypeName" xml:space="preserve">
		<value>ValueType Name</value>
		<comment>The displayed form of the ValueTypeName enum value</comment>
	</data>
	<data name="ElementGrouping.AddElement.TransactionName" xml:space="preserve">
		<value>Add Element to Group</value>
		<comment>The transaction name used when adding an element to a group.</comment>
	</data>
	<data name="ElementGrouping.AddGroup.TransactionName" xml:space="preserve">
		<value>Add Group</value>
		<comment>The transaction name used when adding a group.</comment>
	</data>
	<data name="ElementGrouping.DefaultNamePattern" xml:space="preserve">
		<value>Group{0}</value>
		<comment>The base name used to create a name for a new ElementGrouping. This is a format string with {0} being the placeholder for the number placement.</comment>
	</data>
	<data name="ElementGrouping.RemoveElementExclusion.TransactionName" xml:space="preserve">
		<value>Remove Element Exclusion</value>
		<comment>The transaction name used when removing an explicitly excluded element from a group.</comment>
	</data>
	<data name="ElementGroupingTypes.PropertyDescriptor.Description" xml:space="preserve">
		<value>Select group types to control content and associate behavior with elements in this Group.</value>
		<comment>Description shown in the properties window for the 'GroupTypes' property of an ElementGrouping.</comment>
	</data>
	<data name="ElementGroupingTypes.PropertyDescriptor.DisplayName" xml:space="preserve">
		<value>GroupTypes</value>
		<comment>Display name shown in the properties window for the 'GroupTypes' property of an ElementGrouping.</comment>
	</data>
	<data name="ElementGroupingTypes.PropertyDescriptor.TransactionName" xml:space="preserve">
		<value>Select Group Types</value>
		<comment>The transaction name used when modifying the set of types associated with a group</comment>
	</data>
	<data name="ExclusiveOrConstraint.ClassName" xml:space="preserve">
		<value>ExclusiveOrConstraint</value>
		<comment>Text used as the class name, displayed in the properties window.</comment>
	</data>
	<data name="ExclusiveOrConstraint.ExclusionConstraintName.DisplayName" xml:space="preserve">
		<value>ExclusionConstraintName</value>
		<comment>Text used as the name for Name property of the coupled exclusion constraint, displayed in the properties window.</comment>
	</data>
	<data name="ExclusiveOrConstraint.MandatoryConstraintName.DisplayName" xml:space="preserve">
		<value>MandatoryConstraintName</value>
		<comment>Text used as the name for Name property of the coupled mandatory constraint, displayed in the properties window.</comment>
	</data>
	<data name="FactType.RemoveImpliedInternalUniquenessConstraints.TransactionName" xml:space="preserve">
		<value>Remove Implied Internal Uniqueness Constraints</value>
		<comment>The name of the transaction that auto-fixes implied and duplicate internal constraints.</comment>
	</data>
	<data name="FrequencyConstraint.ConvertToUniquenessConstraint.TransactionName" xml:space="preserve">
		<value>Convert Frequency Constraint To Uniqueness</value>
		<comment>The name of the transaction that converts a frequency constraint to a uniqueness.</comment>
	</data>
	<data name="FrequencyConstraint.UnboundedMaxValueText" xml:space="preserve">
		<value>Unbounded</value>
		<comment>Text used in the dropdown editor and type converter for the frequency constraint max value. Correspond to the 0 value in the object model.</comment>
	</data>
	<data name="GroupingMembershipTypeCompliance.NotExcluded" xml:space="preserve">
		<value>Not Excluded</value>
		<comment>Displayed enum value for group membership type compliance. Allow all elements that are not explicitly excluded by any GroupType.</comment>
	</data>
	<data name="GroupingMembershipTypeCompliance.PartiallyApproved" xml:space="preserve">
		<value>Approved by Some Type</value>
		<comment>Displayed enum value for group membership type compliance. Allow all elements that are approved by at least one associated type GroupType.</comment>
	</data>
	<data name="GroupingMembershipTypeCompliance.FullyApproved" xml:space="preserve">
		<value>Approved by All Types</value>
		<comment>Displayed enum value for group membership type compliance. Allow all elements that are approved by all associated GroupTypes.</comment>
	</data>
	<data name="ImplicitBooleanValueType.PropertyRestriction" xml:space="preserve">
		<value>The modification of the IsImplicitBooleanValue property on a ValueType is not allowed.</value>
		<comment>Error message for when a user attempts to modify properties on an Implicit Boolean ValueType</comment>
	</data>
	<data name="ImplicitBooleanValueType.Restriction" xml:space="preserve">
		<value>The modification of properties on an Implicit Boolean ValueType is not allowed.</value>
		<comment>Error message for when a user attempts to modify the IsImplicitBooleanValueType property on a ValueType</comment>
	</data>
	<data name="ImplicitBooleanValueType.NoReadingFormatString" xml:space="preserve">
		<value>{0}Value</value>
		<comment>The format string for naming an implicit boolean value type when there are no readings on the fact type.</comment>
	</data>
	<data name="ImpliedFactType.PredicateInverseReading" xml:space="preserve">
		<value>{0} involves {1}</value>
		<comment>The inverse reading for the predicate created implicitly via objectification. There is no attempt made to keep the predicate readings unique in ring situations.We allow the model error to populate instead of generating an articial unique reading.</comment>
	</data>
	<data name="ImpliedFactType.PredicateReading" xml:space="preserve">
		<value>{0} is involved in {1}</value>
		<comment>The reading for the predicate created implicitly via objectification.There is no attempt made to keep the predicate readings unique in ring situations.We allow the model error to populate instead of generating an articial unique reading.</comment>
	</data>
	<data name="LoadException.IncompatibleAssembly" xml:space="preserve">
		<value>The following extension assembly is not compatible with this version of NORMA and must be replaced with a compatible version before it can be loaded.&#xd;&#xa;{0}</value>
		<comment>Exception text used when a NORMA extension fails a compatibility check.</comment>
	</data>
	<data name="LoadException.InvalidLoadKey" xml:space="preserve">
		<value>The registered extension type '{0}' has a missing or invalid extension load key and cannot be safely used in NORMA.</value>
		<comment>Exception text used when a NORMA extension fails because of a missing or invalid load key.</comment>
	</data>
	<data name="LoadException.ExtensionSkippingNotSupportedByStore" xml:space="preserve">
		<value>The Store being loaded does not support skipping non-generative extensions.</value>
		<comment>Exception text used when a non-generative load is attempted on a store that does not support the ISkipExtensions interface.</comment>
	</data>
	<data name="LogicalCombinationOperator.And" xml:space="preserve">
		<value>And</value>
	</data>
	<data name="LogicalCombinationOperator.Or" xml:space="preserve">
		<value>Or (Inclusive)</value>
	</data>
	<data name="LogicalCombinationOperator.Xor" xml:space="preserve">
		<value>Or (Exclusive)</value>
	</data>
	<data name="Model.Reading.RoleDeletedText" xml:space="preserve">
		<value>DELETED</value>
		<comment>Text used to replace a role place holder when the role is deleted</comment>
	</data>
	<data name="ModelContextWindow.WindowTitle" xml:space="preserve">
		<value>ORM Context Window</value>
		<comment>Text to place in the title bar of the context tool window.</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueRequiresAggregationContext.CompactText" xml:space="preserve">
		<value>An aggregation function requires an aggregation context.</value>
		<comment>Model validation error text for an aggregate calculation with no aggregation context. Compact form.</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueRequiresAggregationContext.Text" xml:space="preserve">
		<value>{0} must provide an aggregation context.</value>
		<comment>Model validation error text for an aggregate calculation with no aggregation context. {0}=error display context</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueRequiresFunction.CompactText" xml:space="preserve">
		<value>A calculation must specify a function.</value>
		<comment>Model validation error text for a path calculation without no specified function. Compact form.</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueRequiresFunction.Text" xml:space="preserve">
		<value>{0} has a calculation with no function.</value>
		<comment>Model validation error text for a path calculation without no specified function. {0}=error display context</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueParameterBinding.CompactText" xml:space="preserve">
		<value>Parameter '{0}' requires input.</value>
		<comment>Model validation error text for a path calculation with no binding for some parameter. Compact form. {0}=parameter name</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueParameterBinding.Text" xml:space="preserve">
		<value>{0} must provide input for parameter '{1}'.</value>
		<comment>Model validation error text for a path calculation with no binding for some parameter. {0}=error display context,{1}=parameter name</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueMustBeConsumed.CompactText" xml:space="preserve">
		<value>A calculation result must be used as a path condition, calculation input, or projection source.</value>
		<comment>Model validation error text for a path calculation with a result that is not being used. Compact form.</comment>
	</data>
	<data name="ModelError.CalculatedPathValue.CalculatedPathValueMustBeConsumed.Text" xml:space="preserve">
		<value>{0} must use a calculation result as a path condition, calculation input, or projection source.</value>
		<comment>Model validation error text for a path calculation with a result that is not being used. {0}=error display context</comment>
	</data>
	<data name="ModelError.CardinalityConstraint.CardinalityRangeOverlapError.CompactMessage" xml:space="preserve">
		<value>Cardinality ranges have overlapping or non-increasing values.</value>
		<comment>CardinalityRangeOverlapError compact text</comment>
	</data>
	<data name="ModelError.CardinalityConstraint.CardinalityRangeOverlapError.Message" xml:space="preserve">
		<value>{0} has a cardinality constraint with overlapping or non-increasing values.</value>
		<comment>CardinalityRangeOverlapError text with owner place holder. The resulting sentence will be capitablized automatically. {0}=owner information</comment>
	</data>
	<data name="ModelError.Constraint.CompatibleRolePlayerTypeError.Set.CompactText" xml:space="preserve">
		<value>Constrained roles have incompatible role player types.</value>
		<comment>The role players in an external constraint must have compatible types. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.CompatibleRolePlayerTypeError.Set.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has role players with incompatible types.</value>
		<comment>The role players in an external constraint must have compatible types. Replacement field {0} is the constraint name and {1} is the model name.</comment>
	</data>
	<data name="ModelError.Constraint.CompatibleRolePlayerTypeError.SetComparison.CompactText" xml:space="preserve">
		<value>Role players in column '{0}' have incompatible types.</value>
		<comment>The role players in an external constraint column must have compatible types. Compact form. {0} is the (1-based) column number.</comment>
	</data>
	<data name="ModelError.Constraint.CompatibleRolePlayerTypeError.SetComparison.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has role players in column '{2}' with incompatible types.</value>
		<comment>The role players in an external constraint column must have compatible types. Replacement field {0} is the constraint name, {1} is the model name, and {2} is the (1-based) column number.</comment>
	</data>
	<data name="ModelError.Constraint.ContradictionError.Text" xml:space="preserve">
		<value>Constraints {0} in model '{1}' are in a state of contradiction.</value>
		<comment>Model validation error text when a constraint intersects a second constraint where the second constraints roles are a subset of the constraint roles and are in a state of contradiction.</comment>
	</data>
	<data name="ModelError.Constraint.ExclusionAndMandatoryContradiction.CompactText" xml:space="preserve">
		<value>Overlapping exclusion and mandatory constraints are contradictory.</value>
		<comment>Model validation error text when overlapping exclusion and mandatory constraint are contradictory. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.ExclusionAndEqualityContradiction.CompactText" xml:space="preserve">
		<value>Overlapping exclusion and equality constraints are contradictory.</value>
		<comment>Model validation error text when overlapping exclusion and equality constraints are contradictory. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.ExclusionAndSubsetContradiction.CompactText" xml:space="preserve">
		<value>Overlapping exclusion and subset constraints are contradictory.</value>
		<comment>Model validation error text when overlapping exclusion and subset constraints are contradictory. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.EqualityImpliedByMandatoryError.CompactText" xml:space="preserve">
		<value>Equality constraint implied by mandatory constrained roles.</value>
		<comment>Model validation error text when a single-column equality constraint is put on a set of mandatory roles. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.EqualityImpliedByMandatoryError.Text" xml:space="preserve">
		<value>Equality constraint '{0}' in model '{1}' is implied by simple mandatory constraints on all roles in the constraint.</value>
		<comment>Model validation error text when a single-column equality constraint is put on a set of mandatory roles.</comment>
	</data>
	<data name="ModelError.Constraint.ExternalConstraintArityMismatch.CompactText" xml:space="preserve">
		<value>Constrained role sequences have different numbers of roles.</value>
		<comment>Model validation error compact text when role sequences in a multi column constraint have different role counts (arity).</comment>
	</data>
	<data name="ModelError.Constraint.ExternalConstraintArityMismatch.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has role sequences with different numbers of roles.</value>
		<comment>Model validation error text when role sequences in a multi column constraint have different role counts (arity). {0}=constraint name, {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintExactlyOneError.CompactText" xml:space="preserve">
		<value>A frequency constraint with range of exactly one should be a uniqueness constraint.</value>
		<comment>The frequency constraint has minimum and maximum values of exactly one, should be represented as a uniqueness constraint. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintExactlyOneError.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has a range of exactly one, should be a uniqueness constraint.</value>
		<comment>The frequency constraint has minimum and maximum values of exactly one, should be represented as a uniqueness constraint. {0}=constraint name {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintMinMaxError.CompactText" xml:space="preserve">
		<value>Maximum frequency value cannot be less than minimum.</value>
		<comment>The frequency constraint minimum must be less than or equal to the maximum. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintMinMaxError.Text" xml:space="preserve">
		<value>Maximum value for constraint '{0}' in model '{1}' cannot be less than the minimum value.</value>
		<comment>The frequency constraint minimum must be less than or equal to the maximum. {0}=constraint name {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintNonRestrictiveRangeError.CompactText" xml:space="preserve">
		<value>An unbounded range with a minimum of one is always satisfied.</value>
		<comment>A frequency constraint with a minimum of 1 and an unbounded maximum is always true and should not be specified. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintNonRestrictiveRangeError.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has an unbounded range with a minimum of one. This frequency pattern is always satisfied.</value>
		<comment>A frequency constraint with a minimum of 1 and an unbounded maximum is always true and should not be specified. {0}=constraint name {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintViolatedByUniquenessConstraintError.CompactText" xml:space="preserve">
		<value>Frequency constraint is violated by a uniqueness constraint on the same roles.</value>
		<comment>Model validation error text used when a frequency constraint is places on the same roles as a uniqueness constraint. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.FrequencyConstraintViolatedByUniquenessConstraintError.Text" xml:space="preserve">
		<value>Frequency constraint '{0}' in model '{1}' is violated by a uniqueness constraint on the same roles.</value>
		<comment>Model validation error text used when a frequency constraint is places on the same roles as a uniqueness constraint. {0}=constraint name {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.ImplicationError.ImpliedBySubsetText" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' is implied by at least one constraint of the same type attached to a subset of the same roles.</value>
		<comment>Model validation error text when a constraint intersects a second constraint where the second constraint's roles are a subset of the constraint roles.</comment>
	</data>
	<data name="ModelError.Constraint.ImplicationError.ImpliedBySubsetCompactText" xml:space="preserve">
		<value>Constraint is implied by a constraint of the same type attached to a subset of the same roles.</value>
		<comment>Model validation error text when a constraint intersects a second constraint where the second constraint's roles are a subset of the constraint roles. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.ImplicationError.ImpliedBySupersetText" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' is implied by at least one constraint of the same type attached to a superset of the same roles.</value>
		<comment>Model validation error text when a constraint intersects a second constraint where the second constraint's roles are a superset of the constraint roles.</comment>
	</data>
	<data name="ModelError.Constraint.ImplicationError.ImpliedBySupersetCompactText" xml:space="preserve">
		<value>Constraint is implied by a constraint of the same type attached to a superset of the same roles.</value>
		<comment>Model validation error text when a constraint intersects a second constraint where the second constraint's roles are a superset of the constraint roles. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.NotWellModeledSubsetAndMandatoryError.CompactText" xml:space="preserve">
		<value>Overlapping subset and mandatory constraints are not both needed.</value>
		<comment>Model validation error text when a mandatory constraint is put on the subset role of a subset constraint relationship. Compact form</comment>
	</data>
	<data name="ModelError.Constraint.NotWellModeledSubsetAndMandatoryError.Text" xml:space="preserve">
		<value>Subset constraint '{0}' and mandatory constraint '{1}' in model '{2}' are not well-modeled. Suggested ways to fix: (1) Delete the mandatory constraint. (2) Add another mandatory constraint on the superset role. (3) Delete the subset constraint.</value>
		<comment>Model validation error text when a mandatory constraint is put on the subset role of a subset constraint relationship.</comment>
	</data>
	<data name="ModelError.Constraint.RingConstraintTypeNotSpecifiedError.CompactMessage" xml:space="preserve">
		<value>A ring type must be specified.</value>
		<comment>The ring constraint type must be specified. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.RingConstraintTypeNotSpecifiedError.Message" xml:space="preserve">
		<value>The ring type for ring constraint '{0}' in model '{1}' is not specified.</value>
		<comment>The ring constraint type must be specified. {0} is the constraint name and {1} is the model name.</comment>
	</data>
	<data name="ModelError.Constraint.SubsetImpliedByMandatoryError.CompactText" xml:space="preserve">
		<value>Subset constraint implied by mandatory superset role.</value>
		<comment>Model validation error text when a single-column subset constraint targets a mandatory role. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.SubsetImpliedByMandatoryError.Text" xml:space="preserve">
		<value>Subset constraint '{0}' in model '{1}' is implied by a simple mandatory constraint on the superset role.</value>
		<comment>Model validation error text when a single-column subset constraint targets a mandatory role.</comment>
	</data>
	<data name="ModelError.Constraint.SupersetRoleOfSubtypeSubsetConstraintNotSubtypeError.CompactText" xml:space="preserve">
		<value>Subset constraint from a subtyping relationship must not be to role with a subtype role player.</value>
		<comment>When a subset constraint goes from a subtype relationship to an normal role, the role player must not be a subtype of the role player for that role. This would indicates that the supertype must be a subset of one of its subtypes. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.SupersetRoleOfSubtypeSubsetConstraintNotSubtypeError.Text" xml:space="preserve">
		<value>Subset constraint '{0}' in model '{1}' is from a subtype and has a superset role player that is a subtype of the supertype in that relationship.</value>
		<comment>When a subset constraint goes from a subtype relationship to an normal role, the role player must not be a subtype of the role player for that role. This would indicates that the supertype must be a subset of one of its subtypes. Replacement field {0} is the constraint name, {1} is the model name.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.ExactlyTwo" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' requires exactly two constrained role sequences.{2}</value>
		<comment>Model validation error text when too few role sequences are specified for a constraint that requires exactly two role sequences. {0}=constraint name, {1}=model name, {2}=addendum describing current sequence state for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.ExactlyTwo.Compact" xml:space="preserve">
		<value>Constraint requires exactly two role sequences.{0}</value>
		<comment>Model validation error text when too few role sequences are specified for a constraint that requires exactly two role sequences. Compact form. {0}=addendum describing current sequence state for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.TwoOrMore" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' requires two or more constrained role sequences.{2}</value>
		<comment>Model validation error text when too few role sequences are specified for a constraint that requires multiple role sequences. {0}=constraint name, {1}=model name, {2}=addendum describing current sequence state for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.TwoOrMore.Compact" xml:space="preserve">
		<value>Constraint requires two or more role sequences.{0}</value>
		<comment>Model validation error text when too few role sequences are specified for a constraint that requires multiple role sequences. Compact form. {0}=addendum describing current sequence state for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.NoSequenceAddendum" xml:space="preserve">
		<value> No role sequences are currently constrained.</value>
		<comment>Addendum for too few role sequences messages when no sequences are constrained.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.NoSequenceAddendum.Compact" xml:space="preserve">
		<value> Currently: no sequences.</value>
		<comment>Addendum for too few role sequences messages when no sequences are constrained. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.OneSequenceAddendum" xml:space="preserve">
		<value> One role sequence with {0} role(s) is currently constrained.</value>
		<comment>Addendum for too few role sequences messages when one sequence is constrained. {0}=count of roles in the single sequence.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewRoleSequences.OneSequenceAddendum.Compact" xml:space="preserve">
		<value> Currently: one sequence with {0} role(s).</value>
		<comment>Addendum for too few role sequences messages when one sequence is constrained. Compact form. {0}=count of roles in the single sequence.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.ExactlyTwo" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' requires exactly two roles.{2}</value>
		<comment>Model validation error text when too few roles are specified for a constraint with a single role sequence requiring exactly two roles. {0}=constraint name, {1}=model name, {2}=addendum describing current role count for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.ExactlyTwo.Compact" xml:space="preserve">
		<value>Constraint requires exactly two roles.{0}</value>
		<comment>Model validation error text when too few roles are specified for a constraint with a single role sequence requiring exactly two roles. Compact form. {0}=addendum describing current role count for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.TwoOrMore" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' requires two or more roles.{2}</value>
		<comment>Model validation error text when too few roles are specified for a constraint with a single role sequence requiring two or more roles. {0}=constraint name, {1}=model name, {2}=addendum describing current role count for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.TwoOrMore.Compact" xml:space="preserve">
		<value>Constraint requires two or more roles.{0}</value>
		<comment>Model validation error text when too few roles are specified for a constraint with a single role sequence requiring two or more roles. Compact form. {0}=addendum describing current role count for the constraint.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.NoRoleAddendum" xml:space="preserve">
		<value> No roles are currently constrained.</value>
		<comment>Addendum for too few sequence roles messages when no roles are constrained.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.NoRoleAddendum.Compact" xml:space="preserve">
		<value> Currently: no roles.</value>
		<comment>Addendum for too few sequence roles messages when no roles are constrained. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.OneRoleAddendum" xml:space="preserve">
		<value> A single role is currently constrained.</value>
		<comment>Addendum for too few sequence roles messages when a single role is constrained.</comment>
	</data>
	<data name="ModelError.Constraint.TooFewSequenceRoles.OneRoleAddendum.Compact" xml:space="preserve">
		<value> Currently: one role.</value>
		<comment>Addendum for too few sequence roles messages when a single role is constrained. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.TooManyRoleSequences.CompactText" xml:space="preserve">
		<value>Constraint compares too many role sequences.</value>
		<comment>Model validation error text when too many role sequences are specified for a constraint. This is an uncommon condition that should only occur with a hand edit to a model file. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.TooManyRoleSequences.Text" xml:space="preserve">
		<value>Constraint '{0}' in model '{1}' has too many role sequences.</value>
		<comment>Model validation error text when too many role sequences are specified for a constraint. This is an uncommon condition that should only occur with a hand edit to a model file. {0}=constraint name, {1}=model name</comment>
	</data>
	<data name="ModelError.Constraint.ValueComparisonConstraintOperatorTypeNotSpecifiedError.CompactMessage" xml:space="preserve">
		<value>A comparison operator must be specified.</value>
		<comment>The value comparison constraint operator must be specified. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.ValueComparisonConstraintOperatorTypeNotSpecifiedError.Message" xml:space="preserve">
		<value>The comparison operator for value comparison constraint '{0}' in model '{1}' is not specified.</value>
		<comment>The value comparison constraint operator must be specified. {0} is the constraint name and {1} is the model name.</comment>
	</data>
	<data name="ModelError.Constraint.ValueComparisonRolesNotComparableError.CompactMessage" xml:space="preserve">
		<value>Compared roles must resolve to the same unit or to value types with comparable data types.</value>
		<comment>The two value comparison constraint roles must be single-valued and comparable. Compact form.</comment>
	</data>
	<data name="ModelError.Constraint.ValueComparisonRolesNotComparableError.Message" xml:space="preserve">
		<value>The roles compared by value comparison constraint '{0}' in model '{1}' must resolve to the same unit or to value types with comparable data types.</value>
		<comment>The two value comparison constraint roles must be single-valued and comparable. {0} is the constraint name and {1} is the model name.</comment>
	</data>
	<data name="ModelError.ConstraintRoleProjection.IncompatibleProjection.CompactText" xml:space="preserve">
		<value>The role player of a constrained role is incompatible with the join path projection.</value>
		<comment>Model validation error text for projection on a constraint role from a join path where the type of projection does not match the type of the constrained role. Compact form.</comment>
	</data>
	<data name="ModelError.ConstraintRoleProjection.IncompatibleProjection.Text" xml:space="preserve">
		<value>{0} has a constrained role with an incompatible join path projection.</value>
		<comment>Model validation error text for projection on a constraint role from a join path where the type of projection does not match the type of the constrained role. {0}=error display context (from join path)</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequenceJoinPath.ConstraintRoleSequenceJoinPathRequiresProjection.CompactText" xml:space="preserve">
		<value>At least one join path must be projected on constrained roles.</value>
		<comment>Model validation error text for a constraint join path with no path projection. Compact form.</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequenceJoinPath.ConstraintRoleSequenceJoinPathRequiresProjection.Text" xml:space="preserve">
		<value>{0} must project constrained roles from at least one join path.</value>
		<comment>Model validation error text for a constraint join path with no path projection. {0}=error display context</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequenceJoinPath.PartialConstraintRoleSequenceJoinPathProjection.CompactText" xml:space="preserve">
		<value>All constrained roles must be projected from each projected join path.</value>
		<comment>Model validation error text for a constraint join path projection that does not project all constraint roles. Compact form.</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequenceJoinPath.PartialConstraintRoleSequenceJoinPathProjection.Text" xml:space="preserve">
		<value>{0} must project all constrained roles from each projected join path.</value>
		<comment>Model validation error text for a constraint join path projection that does not project all constraint roles. {0}=error display context</comment>
	</data>
	<data name="ModelError.DerivedRoleProjection.IncompatibleProjection.CompactText" xml:space="preserve">
		<value>A role player is incompatible with the derivation rule projection.</value>
		<comment>Model validation error text for projection on a role from a derived fact type where the type of projection does not match the type of the role. Compact form.</comment>
	</data>
	<data name="ModelError.DerivedRoleProjection.IncompatibleProjection.Text" xml:space="preserve">
		<value>{0} has a derivation projection with an incompatible type.</value>
		<comment>Model validation error text for projection on a role from a derived fact type where the type of projection does not match the type of the role. {0}=error display context (from role)</comment>
	</data>
	<data name="ModelError.ElementGrouping.DuplicateNameError.CompactMessage" xml:space="preserve">
		<value>Group name '{0}' is used by multiple groups.</value>
		<comment>Model validation error text used when multiple groups with the same name are loaded into a model. Compact form. field 0 is the element name. This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.ElementGrouping.DuplicateNameError.Message" xml:space="preserve">
		<value>Model '{0}' contains multiple groups named '{1}'. Group names must be unique in the model.</value>
		<comment>Model validation error text used when multiple groups with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.ElementGrouping.MembershipContradictionError.CompactMessage" xml:space="preserve">
		<value>Group types conflict on membership of '{0}'.</value>
		<comment>Model validation error text used when an element is explicitly included by one grouptype and explicitly excluded by another. Compact form. Field 0 is the element name.</comment>
	</data>
	<data name="ModelError.ElementGrouping.MembershipContradictionError.Message" xml:space="preserve">
		<value>Group types for group '{0}' conflict on the group membership of '{1}'.</value>
		<comment>Model validation error text used when an element is explicitly included by one grouptype and explicitly excluded by another. Field 0 is the group name, field 1 is the element name.</comment>
	</data>
	<data name="ModelError.EntityType.RequiresReferenceScheme.CompactMessage" xml:space="preserve">
		<value>Entity type requires a reference scheme.</value>
		<comment>Compact message for an entity type must have a preferred reference scheme.</comment>
	</data>
	<data name="ModelError.EntityType.RequiresReferenceScheme.Message" xml:space="preserve">
		<value>Entity type '{0}' in model '{1}' requires a local preferred reference scheme or supertype(s) that provide preferred identification.</value>
		<comment>An entity type must have a preferred reference scheme. Replacement field {0} is the entity type name and {1} is the model name.</comment>
	</data>
	<data name="ModelError.EntityTypeInstance.ObjectifiedInstanceRequired.CompactMessage" xml:space="preserve">
		<value>Objectified fact required for entity '{0}'.</value>
		<comment>Text displayed when an objectified fact instance is not associated with an external identifying instance. Compact form. {0}=instance</comment>
	</data>
	<data name="ModelError.EntityTypeInstance.ObjectifiedInstanceRequired.Message" xml:space="preserve">
		<value>Objectified fact instance required for instance '{0}' of '{1}' in model '{2}'.</value>
		<comment>Text displayed when an objectified fact instance is not associated with an external identifying instance. {0}=instance, {1}=entitytype, {2}=model.</comment>
	</data>
	<data name="ModelError.EntityTypeInstance.TooFewEntityTypeRoleInstances.CompactMessage" xml:space="preserve">
		<value>Instance '{0}' has an incomplete identifier.</value>
		<comment>Text displayed when there aren't enough entity type role instances to completely fill a single entity population row. Compact form {0}=instance.</comment>
	</data>
	<data name="ModelError.EntityTypeInstance.TooFewEntityTypeRoleInstances.Message" xml:space="preserve">
		<value>'{0}' instance '{1}' in model '{2}' has an incomplete identifier.</value>
		<comment>Text displayed when there aren't enough entity type role instances to completely fill a single entity population row. {0}=entitytype, {1}=instance, {2}=model.</comment>
	</data>
	<data name="ModelError.FactType.ImpliedInternalUniquenessConstraintError.CompactText" xml:space="preserve">
		<value>Some internal uniqueness constraint(s) duplicate or imply each other.</value>
		<comment>Text used in the ImpliedInternalUniquenessConstraintError'. Compact form.</comment>
	</data>
	<data name="ModelError.FactType.ImpliedInternalUniquenessConstraintError.Text" xml:space="preserve">
		<value>{0} contains one or more internal uniqueness constraints that are implied by or duplicates of other internal uniqueness constraints.</value>
		<comment>Text used in the ImpliedInternalUniquenessConstraintError'. {0}=fact type display context</comment>
	</data>
	<data name="ModelError.FactType.NMinusOneRule.CompactText" xml:space="preserve">
		<value>Internal uniqueness constraint must span at least {0} roles.</value>
		<comment>Text diplayed in the Model Error when the span of the internal constraint is less than the span of the Fact Type - 1. Compact form. {0}=factarity - 1</comment>
	</data>
	<data name="ModelError.FactType.NMinusOneRule.Text" xml:space="preserve">
		<value>Uniqueness constraint '{0}' on {1} must span at least {2} roles.</value>
		<comment>Text diplayed in the Model Error when the span of the internal constraint is less than the span of the Fact Type - 1. {0}=constraint name, {1}=fact type display context, {2}=factarity-1</comment>
	</data>
	<data name="ModelError.FactType.RequiresInternalUniquenessConstraint.CompactMessage" xml:space="preserve">
		<value>Fact type requires an internal uniqueness constraint with alethic modality.</value>
		<comment>Text displayed in the text of the FactTypeRequiresInternalUniquenessContraintError. Compact form.</comment>
	</data>
	<data name="ModelError.FactType.RequiresInternalUniquenessConstraint.Message" xml:space="preserve">
		<value>{0} requires an internal uniqueness constraint with alethic modality.</value>
		<comment>Text displayed in the text of the FactTypeRequiresInternalUniquenessContraintError. {0}=fact type display context</comment>
	</data>
	<data name="ModelError.FactType.RequiresReading.CompactMessage" xml:space="preserve">
		<value>Fact type requires at least one reading.</value>
		<comment>Text displayed in the text of the FactTypeRequiresReadingError. Compact form.</comment>
	</data>
	<data name="ModelError.FactType.RequiresReading.Message" xml:space="preserve">
		<value>At least one reading is required for {0}.</value>
		<comment>Text displayed in the text of the FactTypeRequiresReadingError. {0}=fact type display context</comment>
	</data>
	<data name="ModelError.FactTypeInstance.ObjectifyingInstanceRequired.CompactMessage" xml:space="preserve">
		<value>Identifier required for fact '{0}'.</value>
		<comment>Text displayed when an external identifier is needed for a FactTypeInstance. Compact form. {0}=instance.</comment>
	</data>
	<data name="ModelError.FactTypeInstance.ObjectifyingInstanceRequired.Message" xml:space="preserve">
		<value>Identifier required for fact instance '{0}' in model '{1}'.</value>
		<comment>Text displayed when an external identifier is needed for a FactTypeInstance. {0}=instance {1}=model.</comment>
	</data>
	<data name="ModelError.FactTypeInstance.TooFewFactTypeRoleInstances.CompactMessage" xml:space="preserve">
		<value>Fact '{0}' has a partial population.</value>
		<comment>Text displayed when there aren't enough fact type role instances to completely fill a single fact type population row. Compact form. {0}=instance.</comment>
	</data>
	<data name="ModelError.FactTypeInstance.TooFewFactTypeRoleInstances.Message" xml:space="preserve">
		<value>Fact instance '{0}' in model '{1}' has a partial population.</value>
		<comment>Text displayed when there aren't enough fact type role instances to completely fill a single fact type population row. {0}=instance {1}=model.</comment>
	</data>
	<data name="ModelError.Model.DuplicateConstraintNames.CompactText" xml:space="preserve">
		<value>Constraint name '{0}' is used by multiple constraints.</value>
		<comment>Model validation error text used when multiple constraints with the same name are loaded into a model. Compact form. Field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateConstraintNames.Text" xml:space="preserve">
		<value>Model '{0}' contains multiple constraints named '{1}'. Constraint names must be unique in the model.</value>
		<comment>Model validation error text used when multiple constraints with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateFunctionNames.CompactText" xml:space="preserve">
		<value>Function name '{0}' is used by multiple functions.</value>
		<comment>Model validation error text used when multiple functions with the same name are loaded into a model. Compact form. Field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateFunctionNames.Text" xml:space="preserve">
		<value>Model '{0}' contains multiple functions named '{1}'. Function names must be unique across all functions defined in a model.</value>
		<comment>Model validation error text used when multiple functions with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateObjectTypeNames.CompactText" xml:space="preserve">
		<value>Object type name '{0}' is used by multiple object types.</value>
		<comment>Model validation error text used when multiple object types with the same name are loaded into a model. Compact form. Field 0 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateObjectTypeNames.Text" xml:space="preserve">
		<value>Model '{0}' contains multiple object types named '{1}'. Type names must be unique across all entity and value types in a model.</value>
		<comment>Model validation error text used when multiple object types with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateRecognizedPhraseNames.CompactText" xml:space="preserve">
		<value>Phrase '{0}' is used by multiple recognized phrases.</value>
		<comment>Model validation error text used when multiple recognized phrases with the same name are loaded into a model. Compact form. Field 0 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.DuplicateRecognizedPhraseNames.Text" xml:space="preserve">
		<value>Model '{0}' contains multiple recognized phrases called '{1}'. Phrase names must be unique across all phrases in a model.</value>
		<comment>Model validation error text used when multiple recognized phrases with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Model.PopulationMandatoryError.CompactText" xml:space="preserve">
		<value>Instance '{0}' must participate in fact type '{1}'{2}.</value>
		<comment>Model validation error shown when a population violates a mandatory constraint. Compact form. Field 0 is the derived name of the instance, field 2 is the name of the first facttype name, field 3 is a placeholder for additional fact types.</comment>
	</data>
	<data name="ModelError.Model.PopulationMandatoryError.Text" xml:space="preserve">
		<value>'{0}' instance '{1}' in model '{2}' must participate in fact type '{3}'{4}.</value>
		<comment>Model validation error shown when a population violates a mandatory constraint. Field 0 is the name of the role player, field 1 is the derived name of the instance, field 2 is the model name, field 3 is the name of the first facttype name, field 4 is a placeholder for additional fact types.</comment>
	</data>
	<data name="ModelError.Model.PopulationMandatoryError.AdditionalFactTypeText" xml:space="preserve">
		<value> or fact type '{0}'{1}</value>
		<comment>Model validation error shown when a population violates a mandatory constraint (additional fact types). Field 0 is the name of the fact type, field 1 is the following fact type (replaced by yet another trailing fact type, if available).</comment>
	</data>
	<data name="ModelError.Model.PopulationUniquenessError.FactType.CompactText" xml:space="preserve">
		<value>Instance '{0}' violates a uniqueness constraint on fact type '{1}'.</value>
		<comment>Model validation error shown when a population violates a uniqueness constraint and its role is unnamed. Compact form. Field 0 is the string representation of the instance, field 1 is the facttype name.</comment>
	</data>
	<data name="ModelError.Model.PopulationUniquenessError.FactType.Text" xml:space="preserve">
		<value>'{0}' instance '{1}' in model '{2}' violates a uniqueness constraint on fact type '{3}'.</value>
		<comment>Model validation error shown when a population violates a uniqueness constraint and its role is unnamed.  Field 0 is the name of the object type, field 1 is the string representation of the instance, field 2 is the model name, field 3 is the facttype name.</comment>
	</data>
	<data name="ModelError.Model.PopulationUniquenessError.Role.CompactText" xml:space="preserve">
		<value>Instance '{0}' violates a uniqueness constraint for role '{1}'.</value>
		<comment>Model validation error shown when a population violates a uniqueness constraint and its role is named. Compact form. Field 0 is the string representation of the instance, field 1 is the role name.</comment>
	</data>
	<data name="ModelError.Model.PopulationUniquenessError.Role.Text" xml:space="preserve">
		<value>'{0}' instance '{1}' in model '{2}' violates a uniqueness constraint for role '{3}'.</value>
		<comment>Model validation error shown when a population violates a uniqueness constraint and its role is named.  Field 0 is the name of the object type, field 1 is the string representation of the instance, field 2 is the model name, field 3 is the role name.</comment>
	</data>
	<data name="ModelError.ObjectType.CompatibleSupertypesError.CompactMessage" xml:space="preserve">
		<value>Direct supertypes must not be transitively implied or mutually exclusive.</value>
		<comment>Text displayed in the text of the CompatibleSupertypesError. Compact form.</comment>
	</data>
	<data name="ModelError.ObjectType.CompatibleSupertypesError.Message" xml:space="preserve">
		<value>Direct supertypes of {0} must be overlapping without transitive implication or mutual exclusion.</value>
		<comment>Text displayed in the text of the CompatibleSupertypesError. {0}=object type display context.</comment>
	</data>
	<data name="ModelError.ObjectType.PreferredIdentifierRequiresMandatoryError.CompactMessage" xml:space="preserve">
		<value>The preferred identification scheme has no mandatory roles.</value>
		<comment>Text displayed in the text of the PreferredIdentifierRequiresMandatoryError. Compact form.</comment>
	</data>
	<data name="ModelError.ObjectType.PreferredIdentifierRequiresMandatoryError.Message" xml:space="preserve">
		<value>{0} has a preferred identification scheme with no corresponding mandatory roles. One or more near roles in the facts attached to the preferred identifier must be mandatory.</value>
		<comment>Text displayed in the text of the PreferredIdentifierRequiresMandatoryError. {0}=object type display context</comment>
	</data>
	<data name="ModelError.Reading.DuplicateSignature.CompactText" xml:space="preserve">
		<value>Reading signature '{0}' is used by multiple readings.</value>
		<comment>Model validation error text used when multiple readings have the same normalized reading signature. Compact form. Field 1 is the expanded reading signature.</comment>
	</data>
	<data name="ModelError.Reading.DuplicateSignature.Text" xml:space="preserve">
		<value>Model '{0}' contains multiple readings with an expanded reading signature of '{1}'. Each reading must be unique in the model.</value>
		<comment>Model validation error text used when multiple readings have the same normalized reading signature. Field 0 is the model name, field 1 is the expanded reading signature.</comment>
	</data>
	<data name="ModelError.Reading.RequiresUserModification.CompactMessage" xml:space="preserve">
		<value>Reading text '{0}' requires user modification.</value>
		<comment>Text displayed in the text of the ReadingRequiresUserModificationError. Compact form. {0}=reading text</comment>
	</data>
	<data name="ModelError.Reading.RequiresUserModification.Message" xml:space="preserve">
		<value>{0} requires user modification of the reading text '{1}'.</value>
		<comment>Text displayed in the text of the ReadingRequiresUserModificationError. {0}=fact type display context,{1}=reading text</comment>
	</data>
	<data name="ModelError.Reading.TooFewRoles.CompactMessage" xml:space="preserve">
		<value>Reading text '{0}' has too few roles role placeholders.</value>
		<comment>Text displayed in the text of the TooFewRolesError. {0}=fact type display context,{1}=reading text</comment>
	</data>
	<data name="ModelError.Reading.TooFewRoles.Message" xml:space="preserve">
		<value>{0} has too few role placeholders for the reading with text '{1}'.</value>
		<comment>Text displayed in the text of the TooFewRolesError. {0}=fact type display context,{1}=reading text</comment>
	</data>
	<data name="ModelError.Reading.TooManyRoles.CompactMessage" xml:space="preserve">
		<value>Reading text '{0}' has too many role placeholders.</value>
		<comment>Text displayed in the text of the TooManyRolesError. Compact form. {0}=reading text</comment>
	</data>
	<data name="ModelError.Reading.TooManyRoles.Message" xml:space="preserve">
		<value>{0} has too many role placeholders for the reading with text '{1}'.</value>
		<comment>Text displayed in the text of the TooManyRolesError. {0}=fact type display context,{1}=reading text</comment>
	</data>
	<data name="ModelError.RecognizedPhrase.DuplicateNameError.Message" xml:space="preserve">
		<value>Model '{0}' contains multiple recognized phrases named '{1}'.</value>
		<comment>Model validation error text used when multiple recognized phrases with the same name are loaded into a model. Field 0 is the model name, field 1 is the element name.This is an uncommon condition that should only occur with a hand edit to a model file.</comment>
	</data>
	<data name="ModelError.Role.RolePlayerRequired.CompactMessage" xml:space="preserve">
		<value>Roles requires a role player.</value>
		<comment>Model validation error text displayed when a role does not have a specified role player. Compact form.</comment>
	</data>
	<data name="ModelError.Role.RolePlayerRequired.Message" xml:space="preserve">
		<value>{0} requires a role player.</value>
		<comment>Model validation error text displayed when a role does not have a specified role player. {0}=error display context for role.</comment>
	</data>
	<data name="ModelError.RolePath.JoinedPathRoleRequiresCompatibleRolePlayer.CompactText" xml:space="preserve">
		<value>A path role is joined to a path element with an incompatible role player.</value>
		<comment>Model validation error text for a join to a pathed role with a role player that is not compatible with the join source. Compact form.</comment>
	</data>
	<data name="ModelError.RolePath.JoinedPathRoleRequiresCompatibleRolePlayer.Text" xml:space="preserve">
		<value>{0} joins to a path role with an incompatible role player.</value>
		<comment>Model validation error text for a join to a pathed role with a role player that is not compatible with the join source. {0}=error display context</comment>
	</data>
	<data name="ModelError.RolePath.ObjectUnifierRequiresCompatibleObjectTypes.CompactText" xml:space="preserve">
		<value>Correlation exists between path elements with incompatible object types.</value>
		<comment>Model validation error text for explicit object unifiers relating multiple disconnected pathed roles and path roots. Compact form.</comment>
	</data>
	<data name="ModelError.RolePath.ObjectUnifierRequiresCompatibleObjectTypes.Text" xml:space="preserve">
		<value>{0} correlates path elements with incompatible object types.</value>
		<comment>Model validation error text for explicit object unifiers relating multiple disconnected pathed roles and path roots. {0}=error display context</comment>
	</data>
	<data name="ModelError.RolePath.OuterJoinRequiresOptionalRole.CompactText" xml:space="preserve">
		<value>An outer join cannot target a mandatory role.</value>
		<comment>Model validation error text for an outer join to a mandatory role. Compact form.</comment>
	</data>
	<data name="ModelError.RolePath.OuterJoinRequiresOptionalRole.Text" xml:space="preserve">
		<value>{0} has outer join semantics to a mandatory role.</value>
		<comment>Model validation error text for an outer join to a mandatory role. {0}=error display context</comment>
	</data>
	<data name="ModelError.RolePath.RequiresRootObjectType.CompactText" xml:space="preserve">
		<value>A role path requires a root object type.</value>
		<comment>Model validation error text for a role path with no root object type. Compact form.</comment>
	</data>
	<data name="ModelError.RolePath.RequiresRootObjectType.Text" xml:space="preserve">
		<value>{0} has a role path with no root object type.</value>
		<comment>Model validation error text for a role path with no root object type. {0}=error display context</comment>
	</data>
	<data name="ModelError.RolePath.SameFactTypeRoleFollowsJoin.CompactText" xml:space="preserve">
		<value>A fact type is used from a fact type without an entry role.</value>
		<comment>Model validation error text for a same fact type role specified without a corresponding start or join role. Compact form.</comment>
	</data>
	<data name="ModelError.RolePath.SameFactTypeRoleFollowsJoin.Text" xml:space="preserve">
		<value>{0} has a same fact type role without a preceding fact type entry.</value>
		<comment>Model validation error text for a same fact type role specified without a corresponding start or join role. {0}=error display context</comment>
	</data>
	<data name="ModelError.RolePath.StartRoleFollowsRootObjectType.Text" xml:space="preserve">
		<value>{0} has a start role in an invalid path position.</value>
		<comment>Model validation error text for a pathed role that is not marked as a start role or is marked as a start role and should not be. {0}=error display context</comment>
	</data>
	<data name="ModelError.RoleProjectedDerivationRule.RoleProjectDerivationRequiresProjection.CompactText" xml:space="preserve">
		<value>At least one derivation path must be projected on derived roles.</value>
		<comment>Model validation error text for a fact type or query derivation with no path projection. Compact form.</comment>
	</data>
	<data name="ModelError.RoleProjectedDerivationRule.RoleProjectDerivationRequiresProjection.Text" xml:space="preserve">
		<value>{0} must project derived roles from at least one source path.</value>
		<comment>Model validation error text for a fact type or query derivation with no path projection. {0}=error display context</comment>
	</data>
	<data name="ModelError.RoleProjectedDerivationRule.PartialRoleDerivationProjection.CompactText" xml:space="preserve">
		<value>All derived roles must be projected from each projected derivation path.</value>
		<comment>Model validation error text for a fact type or query derivation projection that does not project all roles. Compact form.</comment>
	</data>
	<data name="ModelError.RoleProjectedDerivationRule.PartialRoleDerivationProjection.Text" xml:space="preserve">
		<value>{0} must project all derived roles from each projected source path.</value>
		<comment>Model validation error text for a fact type or query derivation projection that does not project all roles. {0}=error display context</comment>
	</data>
	<data name="ModelError.UncategorizedModelError.CategoryDisplayName" xml:space="preserve">
		<value>Uncategorized Model Validation Errors</value>
		<comment>Category name to display for uncategorized model errors.</comment>
	</data>
	<data name="ModelError.DisplayContext.FactType" xml:space="preserve">
		<value>fact type '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated a normal FactType. Automatically capitalized on replacement. {0}=FactType {1}=Model.</comment>
	</data>
	<data name="ModelError.DisplayContext.FactTypeRole" xml:space="preserve">
		<value>role '{1}' of {0}</value>
		<comment>Dynamic text replacement for an error associated with a Role in a FactType. Automatically capitalized on replacement. {0}=display contex for fact type {1}=role number.</comment>
	</data>
	<data name="ModelError.DisplayContext.ObjectType" xml:space="preserve">
		<value>object type '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with an ObjectType. Automatically capitalized on replacement. {0}=ObjectType {1}=Model.</comment>
	</data>
	<data name="ModelError.DisplayContext.RoleProjectedDerivationRule" xml:space="preserve">
		<value>derivation rule for {0}</value>
		<comment>Dynamic text replacement for an error associated with a role projected derivation rule (either for a fact type or subquery). Automatically capitalized on replacement. {0}=display context for owning fact type.</comment>
	</data>
	<data name="ModelError.DisplayContext.SetComparisonConstraintSequence" xml:space="preserve">
		<value>sequence '{2}' of constraint '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with a sequence in a set comparison constraint. Automatically capitalized on replacement. {0}=Constraint {1}=Model {2}=sequence number.</comment>
	</data>
	<data name="ModelError.DisplayContext.SetComparisonConstraintSequenceJoinPath" xml:space="preserve">
		<value>join path for sequence '{2}' of constraint '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with a sequence in a set comparison constraint join path. Automatically capitalized on replacement. {0}=Constraint {1}=Model {2}=sequence number.</comment>
	</data>
	<data name="ModelError.DisplayContext.SetConstraint" xml:space="preserve">
		<value>constraint '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with a SetConstraint. Automatically capitalized on replacement. {0}=SetConstraint {1}=Model.</comment>
	</data>
	<data name="ModelError.DisplayContext.SetConstraintJoinPath" xml:space="preserve">
		<value>join path for constraint '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with a SetConstraint join path. Automatically capitalized on replacement. {0}=SetConstraint {1}=Model.</comment>
	</data>
	<data name="ModelError.DisplayContext.Subquery" xml:space="preserve">
		<value>subquery '?{0}' in {1}</value>
		<comment>Dynamic text replacement for an error associated a Subquery. Automatically capitalized on replacement. {0}=SubquerySignature {1}=Display context for role path owner.</comment>
	</data>
	<data name="ModelError.DisplayContext.SubtypeDerivationRule" xml:space="preserve">
		<value>subtype derivation rule for '{0}' in model '{1}'</value>
		<comment>Dynamic text replacement for an error associated with the derivation rule of a subtype. Automatically capitalized on replacement. {0}=ObjectType {1}=Model.</comment>
	</data>
	<data name="ModelError.ValueConstraint.ValueRangeOverlapError.CompactMessage" xml:space="preserve">
		<value>Value constraint ranges have overlapping values.</value>
		<comment>ValueRangeOverlapError text. Compact form.</comment>
	</data>
	<data name="ModelError.ValueConstraint.ValueRangeOverlapError.Message" xml:space="preserve">
		<value>{0} has a value constraint with overlapping values.</value>
		<comment>ValueRangeOverlapError text with owner place holder. The resulting sentence will be capitablized automatically. {0}=owner information</comment>
	</data>
	<data name="ModelError.ValueConstraint.ValueTypeDetachedError.CompactMessage" xml:space="preserve">
		<value>Value constraint requires an associated value type.</value>
		<comment>ValueConstraintValueTypeDetachedError text. Compact form.</comment>
	</data>
	<data name="ModelError.ValueConstraint.ValueTypeDetachedError.Message" xml:space="preserve">
		<value>{0} has a value constraint with no associated value type.</value>
		<comment>ValueConstraintValueTypeDetachedError text with owner place holder. The resulting sentence will be capitalized automatically. {0}=owner information</comment>
	</data>
	<data name="ModelError.ValueRange.MaxValueMismatchError.CompactMessage" xml:space="preserve">
		<value>Value constraint uses a maximum value that does not match the specified data type.</value>
		<comment>MaxValueMismatchError text. Compact form.</comment>
	</data>
	<data name="ModelError.ValueRange.MaxValueMismatchError.Message" xml:space="preserve">
		<value>{0} has a maximum value that does not match the specified data type.</value>
		<comment>MaxValueMismatchError text with owner place holder. The resulting sentence will be capitalized automatically. {0}=owner information</comment>
	</data>
	<data name="ModelError.ValueRange.MinValueMismatchError.CompactMessage" xml:space="preserve">
		<value>Value constraint uses a minimum value that does not match the specified data type.</value>
		<comment>MinValueMismatchError text. Compact form.</comment>
	</data>
	<data name="ModelError.ValueRange.MinValueMismatchError.Message" xml:space="preserve">
		<value>{0} has a minimum value that does not match the specified data type.</value>
		<comment>MinValueMismatchError text with owner place holder. The resulting sentence will be capitalized automatically. {0}=owner information</comment>
	</data>
	<data name="ModelError.ValueType.DataTypeNotSpecified.CompactMessage" xml:space="preserve">
		<value>A data type must be specified for a value type.</value>
		<comment>Text displayed for an unspecified data type. Compact form.</comment>
	</data>
	<data name="ModelError.ValueType.DataTypeNotSpecified.Message" xml:space="preserve">
		<value>A data type must be specified for value type '{0}' in model '{1}'.</value>
		<comment>Text displayed for an unspecified data type</comment>
	</data>
	<data name="ModelError.ValueTypeInstance.CompatibleValueTypeInstanceValue.CompactMessage" xml:space="preserve">
		<value>Value '{0}' is not of the specified data type '{1}'.</value>
		<comment>Text displayed when the data type of the sample data doesn't match it's set data type. Compact form. {0}=value, {1}=datatype.</comment>
	</data>
	<data name="ModelError.ValueTypeInstance.CompatibleValueTypeInstanceValue.Message" xml:space="preserve">
		<value>Value '{0}' in the sample population for value type '{1}' in model '{2}' is not of the specified data type '{3}'.</value>
		<comment>Text displayed when the data type of the sample data doesn't match it's set data type. {0}=value {1}=valuetype {2}=model {3}=datatype.</comment>
	</data>
	<data name="ModelErrorDisplayFilter.ToStringOverrideText" xml:space="preserve">
		<value>(Filtered)</value>
		<comment>Text to display for the property for the ModelErrorDisplayFilter when it is filtered.</comment>
	</data>
	<data name="ModelException.CalculatedPathValueInputBindsToPathConstant.PathConstantInconsistentWithBagInput" xml:space="preserve">
		<value>A PathConstant may not be used as the input for a function parameter with bag semantics.</value>
		<comment>Exception message when an attempt is made to modify assign a PathConstant as the input for a bag parameter.</comment>
	</data>
	<data name="ModelException.CalculatedPathValueIsCalculatedWithFunction.EnforceInitialCalculatedValue" xml:space="preserve">
		<value>The relationship between a Function and a CalculatedPathValue cannot be detached from the initial calculated value.</value>
		<comment>Exception message when an attempt is made to modify the CalculatedValue of a CalculatedPathValueIsCalculatedWithFunction relationship.</comment>
	</data>
	<data name="ModelException.CardinalityConstraint.InvalidRangeText" xml:space="preserve">
		<value>The range(s) specified for a cardinality constraint must be non-negative, increasing, and non-overlapping.</value>
		<comment>Exception message when an attempt is made to parse invalid range text for a cardinality constraint.</comment>
	</data>
	<data name="ModelException.Constraint.EnforceNoForeignFactTypes" xml:space="preserve">
		<value>A constraint must be attached to a fact type in the same model as the constraint.</value>
		<comment>Exception message when an attempt is made to attached facts from an external model to a constraint.</comment>
	</data>
	<data name="ModelException.Constraint.EnforceSingleFactTypeForInternalConstraint" xml:space="preserve">
		<value>Internal constraint can only have one associated fact. The IsInternal property must be cleared before adding roles from a second fact type to the constraint.</value>
		<comment>Exception message when an attempt is made to attached more than one fact type to an internal constraint.</comment>
	</data>
	<data name="ModelError.ConstraintRoleProjection.AutomaticProjectionUnavailable.Text" xml:space="preserve">
		<value>Automatic projection is unavailable because the join path does not contain the exactly one path node with a matching type (the same type or a subtype) for this constrained role.</value>
		<comment>Automatic projection is explicitly requested for a constrained role in a joined constraint sequence when a single node of a matching type does not exist in the role path.</comment>
	</data>
	<data name="ModelError.ConstraintRoleProjection.AutomaticProjectionUnavailableForAutomaticJoinPath.Text" xml:space="preserve">
		<value>Automatic projection is unavailable for an automatically created join path.</value>
		<comment>Block automatic projection on automatic join paths. Projection is handled as part of the automatic join path creation.</comment>
	</data>
	<data name="ModelException.ConstraintRoleSequence.AutomaticJoinPathNotAvailable" xml:space="preserve">
		<value>Automatic join path not available for this constraint role sequence.</value>
		<comment>Exception message when an attempt is made to set the IsAutomatic property to true for a ConstraintRoleSequenceJoinPath when no automatic join path can be determined.</comment>
	</data>
	<data name="ModelException.ConstraintRoleSequenceHasRole.EnforceNoRolePlayerChange" xml:space="preserve">
		<value>Direct modification of role players on a ConstraintRoleSequenceHasRole relationship is not supported. As an alternative, first delete the link then add a new one.</value>
		<comment>Exception message when an attempt is made to directly modify role players on the ConstraintRoleSequenceHasRole relationship.</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequence.JoinPathRequiredError.CompactText" xml:space="preserve">
		<value>Constrained roles in different fact types require a join path.</value>
		<comment>The roles in a set constraint are in different fact types and a join path has not been provided. Compact form.</comment>
	</data>
	<data name="ModelError.SetComparisonConstraintRoleSequence.JoinPathRequiredError.CompactText" xml:space="preserve">
		<value>Constrained roles in sequence {0} are in different fact types and require a join path.</value>
		<comment>The roles in a set comparison constraint role sequence are in different fact types and a join path has not been provided. Compact form. Replacement field {0} is the (1-based) sequence number.</comment>
	</data>
	<data name="ModelError.ConstraintRoleSequence.JoinPathRequiredError.Text" xml:space="preserve">
		<value>{0} requires a join path.</value>
		<comment>The roles in a set constraint are in different fact types and a join path has not been provided. Replacement field {0} is context owner name.</comment>
	</data>
	<data name="ModelError.DerivedRoleProjection.AutomaticProjectionUnavailable.Text" xml:space="preserve">
		<value>Automatic projection is unavailable because the role path does not contain the exactly one path node with a matching type (the same type or a subtype) for this role.</value>
		<comment>Automatic projection is explicitly requested for a role in a derived fact type when a single node of a matching type does not exist in the role path.</comment>
	</data>
	<data name="ModelException.EntityTypeInstance.EnforceFixedRoleInstance" xml:space="preserve">
		<value>The role players of an EntityTypeInstanceHasRoleInstance relationship cannot be changed.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to modify either role player on a EntityTypeInstanceHasRoleInstance relationship.</comment>
	</data>
	<data name="ModelException.EntityTypeInstance.InvalidEntityTypeParent" xml:space="preserve">
		<value>Sample entity instances can only be hooked up to an entity.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to hook up a ValueType to an EntityTypeInstance.</comment>
	</data>
	<data name="ModelException.EntityTypeInstance.InvalidRolesPreferredIdentifier" xml:space="preserve">
		<value>All sample value roles must be part of the parent entity type's preferred identifier.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to hook up role instances to an entity type where the roles are not in the entity type's preferred identifier collection.</comment>
	</data>
	<data name="ModelException.EntityTypeInstance.EnforceRoleUniqueness" xml:space="preserve">
		<value>EntityTypeRoleInstance.Role must be unique in the EntityTypeRoleInstance collection.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to add an EntityTypeRoleInstance with a duplicate Role to the EntityTypeRoleInstance collection.</comment>
	</data>
	<data name="ModelException.EntityTypeSubtypeInstance.DuplicateSupertypeInstance" xml:space="preserve">
		<value>A supertype instance can only be associated with one subtype instance per subtype.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to attach an EntityTypeSubtypeInstance to an EntityTypeSubtype that is associated with another EntityTypeSubtypeInstance on the same subtype.</comment>
	</data>
	<data name="ModelException.EntityTypeSubtypeInstance.EnforceInitialSubtypeInstance" xml:space="preserve">
		<value>Supertype instances cannot be detached from the initial subtype instance.</value>
		<comment>Exception message when an attempt is made to modify the EntityTypeSubtypeInstance role of the EntityTypeSubtypeInstanceHasSupertypeInstance relationship</comment>
	</data>
	<data name="ModelException.ExclusiveOrConstraintCoupler.DirectExclusionConstraintEdit" xml:space="preserve">
		<value>Roles on an ExclusionConstraint linked to a MandatoryConstraint with an ExclusiveOrCoupler should be edited indirectly via the MandatoryConstraint.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to directly edit roles on an ExclusionConstraint that participates in an ExclusiveOrCoupler relationship.</comment>
	</data>
	<data name="ModelException.ExclusiveOrConstraintCoupler.InconsistentConstraintRolesOrModality" xml:space="preserve">
		<value>An ExclusiveOr coupling between a MandatoryConstraint and ExclusionConstraint requires a single-column exclusion constraint with the same roles and modality as the MandatoryConstraint.</value>
		<comment>Exception message when an attempt is made to form an ExclusiveOrConstraintCoupler relationship between incompatible MandatoryConstraint and ExclusionConstraint elements.</comment>
	</data>
	<data name="ModelException.Fact.AddReading.InvalidReadingText" xml:space="preserve">
		<value>Reading text is not in a valid format.</value>
		<comment>The error message that is returned when attempting to add a new reading to a fact type and the text is not valid. Validate reading text must have the number of placeholders equal to the number of roles in the FactType. The replacement fields must be ordered and identified using String.Format replacement syntax. For example: "{0} has {1}".</comment>
	</data>
	<data name="ModelException.FactType.EnforceNoImplicitBooleanValueTypeRolePlayerChange" xml:space="preserve">
		<value>The role associated with an implicit boolean value type cannot be changed.</value>
		<comment>Exception message when an attempt is made to modify a role player associated with an implicit boolean value.</comment>
	</data>
	<data name="ModelException.FactType.EnforceNoRoleMigration" xml:space="preserve">
		<value>A Role must remain with the FactType it was originally associated with.</value>
		<comment>Exception message when an attempt is made to move a role to a different FactType.</comment>
	</data>
	<data name="ModelException.FactType.EnforceRolePlayerNotNestingType" xml:space="preserve">
		<value>A role player cannot be the type objectifying the role's parent fact type.</value>
		<comment>Exception message when an attempt is made to use the same type as both a role player and the nesting type of a fact type.</comment>
	</data>
	<data name="ModelException.FactTypeInstance.DirectionPopulationOfImpliedInstances" xml:space="preserve">
		<value>Sample population of a FactType implied by an Objectification relationship or a SubtypeFact that provides the preferred identification path is implicit. Direct population is not allowed.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to add a FactTypeInstance to an implied population.</comment>
	</data>
	<data name="ModelException.FactTypeInstance.InconsistentRoleOwners" xml:space="preserve">
		<value>All roles in a fact type instance must be owned by the same fact type.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to add roles from different fact types to a role sequence owned by a fact type instance.</comment>
	</data>
	<data name="ModelException.FactTypeInstance.EnforceFixedRoleInstance" xml:space="preserve">
		<value>The role players of a FactTypeInstanceHasRoleInstance relationship cannot be changed.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to modify either role player on a FactTypeInstanceHasRoleInstance relationship.</comment>
	</data>
	<data name="ModelException.FactTypeInstance.EnforceRoleUniqueness" xml:space="preserve">
		<value>FactTypeRoleInstance.Role must be unique in the FactTypeRoleInstance collection.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to add a FactTypeRoleInstance with a duplicate Role to the FactTypeRoleInstance collection.</comment>
	</data>
	<data name="ModelException.Model.DuplicateName.Text" xml:space="preserve">
		<value>The name '{0}' is already in use in this model.</value>
		<comment>Exception message when a name change in the editor attempts to introduce a duplicate name into the model.</comment>
	</data>
	<data name="ModelException.ModelErrorCategory.TypeNotDerivedFromModelErrorCategory" xml:space="preserve">
		<value>The type specified for the ModelErrorDisplayFilterAttribute must be derived from ModelErrorCategory.</value>
		<comment>Exception message when a ModelErrorDisplayFilterAttribute is initialized with a type that does not derive from ModelErrorCategory.</comment>
	</data>
	<data name="ModelException.Objectification.DirectModificationOfImpliedElement" xml:space="preserve">
		<value>FactTypes, role players, and the associated internal constraints implied by an Objectification relationship cannot be directly modified.</value>
		<comment>Exception message when an attempt is made to modify roles, constraints, and role players on elements implied by an Objectification relationship.</comment>
	</data>
	<data name="ModelException.ObjectificationInstance.DirectModificationOfImpliedEntityTypeInstance" xml:space="preserve">
		<value>Entity instances implied through an objectification pattern are managed automatically via the corresponding FactTypeInstance collection.</value>
		<comment>Exception message when an attempt is made to modify an EntityTypeInstance implied by a FactTypeInstance and an internal preferred identifier on the objectified FactType.</comment>
	</data>
	<data name="ModelException.ObjectificationInstance.IncompleteRolePlayers" xml:space="preserve">
		<value>Creation or modification an ObjectificationInstance requires fully constructed endpoint instances with instance owners that match the Objectification FactType and EntityType.</value>
		<comment>Exception message when an attempt is made to create an ObjectificationInstance will partially constructed endpoint instances.</comment>
	</data>
	<data name="ModelException.Objectification.ImpliedFactTypesCannotBeObjectified" xml:space="preserve">
		<value>A FactType that is implied by an Objectification cannot be objectified.</value>
		<comment>Exception message when an attempt is made to objectify a fact type that is implied by another objectification.</comment>
	</data>
	<data name="ModelException.Objectification.ImpliedMustBeImpliedAndIndependentAndCannotPlayRoleInNonImpliedFact" xml:space="preserve">
		<value>Implied objectifications must be implied, must be independent (if possible), and must only play roles in implied fact types.</value>
		<comment>Exception message when an attempt is made to change an explicit Objectification to implied when it does not match the implied objectification pattern or is not independent (if possible) or plays a Role in a non-implied FactType.</comment>
	</data>
	<data name="ModelException.Objectification.ImpliedObjectificationNotAllowed" xml:space="preserve">
		<value>Implied objectifications can not be operated on via this method.</value>
		<comment>Exception message when an attempt is made to operate on an implied objectification by a method that only accepts explicit objectifications.</comment>
	</data>
	<data name="ModelException.ObjectType.EnforceIsIndependentPattern" xml:space="preserve">
		<value>IsIndependent can apply only to an object type with no mandatory roles that do not relate to its preferred identifier.</value>
		<comment>Exception message when an attempt is made to set the IsIndependent property on an object type that plays mandatory roles that are not part of its preferred identification scheme.</comment>
	</data>
	<data name="ModelException.ObjectType.EnforcePreferredIdentifierForEntityType" xml:space="preserve">
		<value>An object type with a preferred identifier must be an entity type.</value>
		<comment>Exception message when an attempt is made to set both a primary identifier and a value type on the same object type.</comment>
	</data>
	<data name="ModelException.ObjectType.EnforceValueTypeNotNestingType" xml:space="preserve">
		<value>An object type cannot be both a value type and an objectified fact type.</value>
		<comment>Exception message when an attempt is made to make an object type both a value type and an objectified fact type.</comment>
	</data>
	<data name="ModelException.ObjectTypeInstance.EnforceFixedRolePlayers" xml:space="preserve">
		<value>The role players of an ObjectTypeHasObjectTypeInstance relationship cannot be changed.</value>
		<comment>Exception message when an attempt is made to change the role players of an ObjectTypeHasObjectTypeInstance relationship.</comment>
	</data>
	<data name="ModelException.Reading.DuplicateSignature.Text" xml:space="preserve">
		<value>The reading signature '{0}' is already used in this model.</value>
		<comment>Exception message when a reading signature change in the editor attempts to introduce a duplicate signature into the model.</comment>
	</data>
	<data name="ModelException.Reading.IsPrimary.ReadOnlyWhenFalse" xml:space="preserve">
		<value>The IsPrimaryForReadingOrder and IsPrimaryForFactType properties cannot be set to false, set these properties to true for the new primary reading and this will occur automatically</value>
		<comment>Exception message output when an attempt is made to set the IsPrimaryForReadingOrder or IsPrimaryForFactType properties of a Reading to false.</comment>
	</data>
	<data name="ModelException.ReferenceMode.AmbiguousName" xml:space="preserve">
		<value>Multiple reference modes found with the same name. Use the reference mode picker instead of setting the name directly.</value>
		<comment>Exception message output when multiple reference modes are found with the same name</comment>
	</data>
	<data name="ModelException.ReferenceMode.EnforceGeneralPattern" xml:space="preserve">
		<value>The format string for a General reference mode is limited to the {ReferenceModeName} replacement field.</value>
		<comment>Exception message when the trivial general reference mode format string pattern is violated</comment>
	</data>
	<data name="ModelException.ReferenceMode.EnforcePopularPattern" xml:space="preserve">
		<value>The format string for a Popular reference mode must include, but not be equal to, the {EntityTypeName} replacement field.</value>
		<comment>Exception message when the popular reference mode format string pattern is violated</comment>
	</data>
	<data name="ModelException.ReferenceMode.EnforceUnitBasedPattern" xml:space="preserve">
		<value>The format string for a UnitBased reference mode must not include the {EntityTypeName} replacement field.</value>
		<comment>Exception message when the unit based reference mode format string pattern is violated</comment>
	</data>
	<data name="ModelException.ReferenceMode.EnforceUniqueFormatString" xml:space="preserve">
		<value>Format strings must be unique across all reference modes in the model.</value>
		<comment>Exception message when the unique format string rule is violated for reference modes</comment>
	</data>
	<data name="ModelException.ReferenceMode.EnforceUniqueModeName" xml:space="preserve">
		<value>Reference mode names must be unique across the model.</value>
		<comment>Exception message when the unique reference mode name rule is violated</comment>
	</data>
	<data name="ModelException.ReferenceMode.IntrinsicRefModesDontChange" xml:space="preserve">
		<value>Reference mode kind cannot be changed for intrinsic reference modes.</value>
		<comment>Exception messege when atttempt is made to change the kind of an intrinsic reference mode</comment>
	</data>
	<data name="ModelException.ReferenceMode.ReferenceModesKindNotEmpty" xml:space="preserve">
		<value>Reference mode kind cannot be empty.</value>
		<comment>Exception message when attempt is made to remove reference mode kind.</comment>
	</data>
	<data name="ModelException.ReferenceModeKind.EnforcePopularPattern" xml:space="preserve">
		<value>The format string for a Popular reference mode kind must include both the {EntityTypeName} and {ReferenceModeName} replacement fields.</value>
		<comment>Exception message when the pattern for a popular reference mode kind is violated.</comment>
	</data>
	<data name="ModelException.ReferenceModeKind.EnforceUnitBasedPattern" xml:space="preserve">
		<value>The format string for a UnitBased reference mode kind must include the {ReferenceModeName} replacement field and must not include the EntityTypeName replacement field.</value>
		<comment>Exception message when the pattern for a unit based reference mode kind is violated.</comment>
	</data>
	<data name="ModelException.ReferenceModeKind.EnforceUniqueFormatString" xml:space="preserve">
		<value>Format strings must be unique across all reference mode kinds in the model.</value>
		<comment>Exception message when the unique format string rule is violated for reference mode kinds</comment>
	</data>
	<data name="ModelException.Role.IsMandatoryRequiresAttachedFactType" xml:space="preserve">
		<value>A Role must be owned by a FactType to set the IsMandatory property.</value>
		<comment>Exception message when an attempt is made to set the IsMandatory property on an unattached role. IsMandatory creates an internal constraint, which is owned by an FactType, so cannot be realized if the parent FactType is unknown.</comment>
	</data>
	<data name="ModelException.RoleInstance.EnforceInitialRole" xml:space="preserve">
		<value>Role instances cannot be detached from the initial Role.</value>
		<comment>Exception message when an attempt is made to modify the Role of a RoleInstance.</comment>
	</data>
	<data name="ModelException.SubtypeFact.ConstraintAndRolePatternFixed" xml:space="preserve">
		<value>The role and constraint patterns of a subtype relationship cannot be modified.</value>
		<comment>Exception message when an attempt is made to modify the roles collection or internal constraints of a SubtypeFact.</comment>
	</data>
	<data name="ModelException.SubtypeFact.Cycle" xml:space="preserve">
		<value>A cycle has been detected in a chain of subtype relationships. A subtype must not be the direct or indirect subtype of its supertype.</value>
		<comment>Exception message when an attempt is made to add a subtype relationship where the subtype is a direct or indirect subtype of the supertype.</comment>
	</data>
	<data name="ModelException.SubtypeFact.MetaRolesMustBeUsedOnSubtypeFact" xml:space="preserve">
		<value>The SubtypeMetaRole and SupertypeMetaRole can only be used with a SubtypeFact.</value>
		<comment>Exception message when an attempt is made to attach SubtypeMetaRole or SuperTypeMetaRole objects to a FactType that is not a SubtypeFact.</comment>
	</data>
	<data name="ModelException.SubtypeFact.NotNested" xml:space="preserve">
		<value>A SubtypeFact cannot be objectified.</value>
		<comment>Exception message when an attempt is made to nest a SubtypeFact.</comment>
	</data>
	<data name="ModelException.SubtypeFact.ProvidesPreferredIdentifierInvalid" xml:space="preserve">
		<value>The preferred identification path cannot be turned off and can only be turned on if the subtype does not have an explicit preferred identifier.</value>
		<comment>Exception message when an attempt is made to change the SubtypeFact.ProvidesPreferredIdentifier property to false.</comment>
	</data>
	<data name="ModelException.SubtypeFact.RolePlayersTypesNotMixed" xml:space="preserve">
		<value>The subtype and supertype of a subtyping relationship must either be entity types or value types, not one of each.</value>
		<comment>Exception message when an attempt is made to mix EntityType and ValueType role players on a SubtypeFact.</comment>
	</data>
	<data name="ModelException.SubtypeMetaRole.OnlyAllowsImplicitConstraints" xml:space="preserve">
		<value>A SubtypeMetaRole cannot only be constrained by implicit single-role uniqueness and mandatory constraints.</value>
		<comment>Exception message when an attempt is made to constraint a SubtypeMetaRole with a constraint other than the implicit uniqueness and mandatory constraints.</comment>
	</data>
	<data name="ModelException.SupertypeMetaRole.ExclusionMustBeSingleColumn" xml:space="preserve">
		<value>An Exclusion constraint including a SubtypeFact is limited to a single column.</value>
		<comment>Exception message when an attempt is made to mix Roles and SupertypeMetaRoles in the same multi-column Exclusion constraint.</comment>
	</data>
	<data name="ModelException.SupertypeMetaRole.UnsupportedConstraintType" xml:space="preserve">
		<value>A SupertypeMetaRole can only be constrained by an implicit single-role uniqueness constraint, a DisjunctiveMandatory constraint, a single-column Exclusion constraint, or the subset role of a single-column Subset constraint.</value>
		<comment>Exception message when an attempt is made to constraint a SupertypeMetaRole with a constraint other than the implicit uniqueness constraint, disjunctive mandatory, single-column exclusion, or (subset role of) single-column subset constraints.</comment>
	</data>
	<data name="ModelException.UnaryRoleCardinalityConstraint.UnaryOnly" xml:space="preserve">
		<value>Role cardinality constraints may be applied only to unary roles</value>
		<comment>Exception message when an attempt is made to apply a role cardinality constraint to a non-unary role.</comment>
	</data>
	<data name="ModelException.UniquenessConstraint.InvalidPreferredIdentifierPreConditions" xml:space="preserve">
		<value>The current state of the roles attached to the external uniqueness constraint do no permit its use as a preferred identifier. All roles must be on binary fact types, and all opposite roles must be attached to the same entity type.</value>
		<comment>Exception message when an attempt is made to set a uniqueness constraint as a preferred identifier when the preconditions are not met.</comment>
	</data>
	<data name="ModelException.ValueTypeInstance.InvalidValueTypeParent" xml:space="preserve">
		<value>Sample value instances can only be hooked up to a value type.</value>
		<comment xml:space="preserve">Exception message when an attempt is made to hook up an EntityType to a ValueTypeInstance.</comment>
	</data>
	<data name="ModelNotesWindow.RootTypeNameNotesSeparatorFormatString" xml:space="preserve">
		<value>{0}: {1}</value>
		<comment>Text that separates a root type's name from notes if multiple notes are displayed in the ORM notes window. Replacement field 0 is the element name, 1 is the note text.</comment>
	</data>
	<data name="ModelDescriptionWindow.EmptyDisplayText" xml:space="preserve">
		<value>An informal description is not available for the current selection.</value>
		<comment>Text to place in an empty description editor tool window.</comment>
	</data>
	<data name="ModelDescriptionWindow.WindowTitle" xml:space="preserve">
		<value>ORM Informal Description Editor</value>
		<comment>Text to place in the title bar of the description editor tool window.</comment>
	</data>
	<data name="ModelNotesWindow.EmptyDisplayText" xml:space="preserve">
		<value>Notes are not available for the current selection.</value>
		<comment>Text to place in an empty notes editor tool window.</comment>
	</data>
	<data name="ModelNotesWindow.WindowTitle" xml:space="preserve">
		<value>ORM Notes Editor</value>
		<comment>Text to place in the title bar of the notes editor tool window.</comment>
	</data>
	<data name="ModelReadingEditor.ChangePrimaryReadingText" xml:space="preserve">
		<value>Change Primary Reading</value>
		<comment>Text used to label the transaction created when the primary reading is changed through the reading editor.</comment>
	</data>
	<data name="ModelReadingEditor.ColumnHeader.Readings" xml:space="preserve">
		<value>Readings</value>
		<comment>Text used to label the readings header. Visible when extension property descriptors are defined for variables.</comment>
	</data>
	<data name="ModelReadingEditor.DeleteReadingTransactionText" xml:space="preserve">
		<value>Delete Reading</value>
		<comment>Text used to describe the transaction created when deleting an existing reading.</comment>
	</data>
	<data name="ModelReadingEditor.ImpliedFactTypeReadingsText" xml:space="preserve">
		<value>Implied Fact Type Readings</value>
		<comment>Text used as the header row for the implied readings in the reading editor for a role selection on an objectified fact type.</comment>
	</data>
	<data name="ModelReadingEditor.MissingRolePlayerText" xml:space="preserve">
		<value>[Missing]</value>
		<comment>Text to display in the reading editor when the role has no roleplayer to substitute into the text.</comment>
	</data>
	<data name="ModelReadingEditor.MoveReading" xml:space="preserve">
		<value>Moving Reading</value>
		<comment>Text used to label the transaction created when a reading is moved through the reading editor.</comment>
	</data>
	<data name="ModelReadingEditor.MoveReadingOrder" xml:space="preserve">
		<value>Moving Reading Order</value>
		<comment>Text used to label the transaction created when a reading order is moved through the reading editor.</comment>
	</data>
	<data name="ModelReadingEditor.NewItemText" xml:space="preserve">
		<value>New…</value>
		<comment>Text to place in the new item entry of the readings list in the reading editor tool window</comment>
	</data>
	<data name="ModelReadingEditor.NewReadingTransactionText" xml:space="preserve">
		<value>Add New Reading</value>
		<comment>Text used to describe the transaction created when creating a new reading.</comment>
	</data>
	<data name="ModelReadingEditor.PrimaryFactTypeReadingsText" xml:space="preserve">
		<value>Fact Type Readings</value>
		<comment>Text used as the header row for the primary readings in the reading editor for a role selection on an objectified fact type.</comment>
	</data>
	<data name="ModelReadingEditor.UnsupportedSelectionText" xml:space="preserve">
		<value>Select an item related to a FactType</value>
		<comment>Text to place in the reading editor when the document view currently has a selection with no associated reading.</comment>
	</data>
	<data name="ModelReadingEditor.WindowTitle" xml:space="preserve">
		<value>ORM Reading Editor</value>
		<comment>Text to place in the title of the reading editor tool window.</comment>
	</data>
	<data name="ModelReferenceModeEditor.AbbreviatedEntityTypeName" xml:space="preserve">
		<value>{E}</value>
		<comment>Abbreviated form of the entity type name</comment>
	</data>
	<data name="ModelReferenceModeEditor.AbbreviatedReferenceModeName" xml:space="preserve">
		<value>{R}</value>
		<comment>Abbreviated form of the reference mode name</comment>
	</data>
	<data name="ModelReferenceModeEditor.AddCustomReferenceModeTransaction" xml:space="preserve">
		<value>Add Custom Reference Mode</value>
		<comment>Text used to name the transaction that adds a custom reference mode</comment>
	</data>
	<data name="ModelReferenceModeEditor.AddNewRowText" xml:space="preserve">
		<value>&lt;add new&gt;</value>
		<comment>Text to display the add a new row to the custom reference modes branch</comment>
	</data>
	<data name="ModelReferenceModeEditor.ChangeFormatStringTransaction" xml:space="preserve">
		<value>Change Format String</value>
		<comment>Text used to name the transaction that changes the format string.</comment>
	</data>
	<data name="ModelReferenceModeEditor.ChangeNameTransaction" xml:space="preserve">
		<value>Change Reference Mode Name</value>
		<comment>Text used to name the transaction the changes the name of a custom reference mode</comment>
	</data>
	<data name="ModelReferenceModeEditor.ChangeReferenceModeKindTransaction" xml:space="preserve">
		<value>Change Reference Mode Kind</value>
		<comment>Text used to name the transaction that changes the reference mode Kind.</comment>
	</data>
	<data name="ModelReferenceModeEditor.CustomReferenceModesHeader" xml:space="preserve">
		<value>Custom Reference Modes</value>
		<comment>Text used to name the Custom Reference Modes column</comment>
	</data>
	<data name="ModelReferenceModeEditor.EditorWindowTitle" xml:space="preserve">
		<value>ORM Reference Mode Editor</value>
		<comment>The text that displays the title of the editor window.</comment>
	</data>
	<data name="ModelReferenceModeEditor.EntityTypeName" xml:space="preserve">
		<value>{EntityTypeName}</value>
		<comment>Text that names the Entity Type in the displayed format string.</comment>
	</data>
	<data name="ModelReferenceModeEditor.FormatStringColumn" xml:space="preserve">
		<value>ValueType Name Format</value>
		<comment>Column header text for the Format String column.</comment>
	</data>
	<data name="ModelReferenceModeEditor.IntrinsicReferenceModesHeader" xml:space="preserve">
		<value>Intrinsic Reference Modes</value>
		<comment>Text used to name the Intrinsic Reference Modes column</comment>
	</data>
	<data name="ModelReferenceModeEditor.KindColumn" xml:space="preserve">
		<value>Kind</value>
		<comment>Column header text for the Kind column.</comment>
	</data>
	<data name="ModelReferenceModeEditor.NameColumn" xml:space="preserve">
		<value>Name</value>
		<comment>Column header text for the name column</comment>
	</data>
	<data name="ModelReferenceModeEditor.ReferenceModeKindHeader" xml:space="preserve">
		<value>Reference Mode Kinds</value>
		<comment>Text used to name the Reference Mode Kind column</comment>
	</data>
	<data name="ModelReferenceModeEditor.ReferenceModeName" xml:space="preserve">
		<value>{ReferenceModeName}</value>
		<comment>Text that names the reference mode in the displayed format string.</comment>
	</data>
	<data name="ModelReferenceModePicker.FormatString" xml:space="preserve">
		<value>{0} ({1})</value>
		<comment>The format string for the reference mode display text in the reference mode picker</comment>
	</data>
	<data name="ModelSamplePopulationEditor.EditInstanceTransactionText" xml:space="preserve">
		<value>Edit '{0}' Instance '{1}'</value>
		<comment>Text used to describe the transaction when editing an instance.  {0}=ObjectType or FactType name, {1}=instance name</comment>
	</data>
	<data name="ModelSamplePopulationEditor.NewInstanceTransactionText" xml:space="preserve">
		<value>Add New '{0}' Instance</value>
		<comment>Text used to describe the transaction when creating an instance.  Replacement field 0 is the column name of the instance being created.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.NullSelection" xml:space="preserve">
		<value>&lt;Unspecified&gt;</value>
		<comment>Text to place when selection is null in the sample population window.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.ObjectifyingIdentifierAlreadyUsedExceptionText" xml:space="preserve">
		<value>'{0}' is already associated with another fact instance.</value>
		<comment>Text used to describe the editor exception when an objectification identifier is chosen that is already associated with another fact instance.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.ObjectifyingIdentifierRelationshipConflictsExceptionText" xml:space="preserve">
		<value>'{0}' cannot be used, existing relationships conflict with relationships on this fact instance.</value>
		<comment>Text used to describe the editor exception when an objectification identifier is chosen that conflicts with existing fact instance relationships.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.RefuseDeleteRoleInstanceExceptionText" xml:space="preserve">
		<value>This instance is implied by an implicit or explicit simple mandatory constraint.&#xd;&#xa;The identifying instance is a simple value with multiple uses, or is an entity instance.&#xd;&#xa;The instance cannot be deleted.</value>
		<comment>Text used to describe the editor exception when an implied element cannot be deleted because it would simply reappear.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.RelateObjectifiedInstanceIdentifierTransactionText" xml:space="preserve">
		<value>Relate '{0}' Identifier '{1}' to Objectified Instance '{2}'</value>
		<comment>Text used to describe the transaction when an identifier is attached to an objectified fact instance. {0}=type name, {1}=identifier instance name, {2}=fact instance name.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.RemoveFactInstanceTransactionText" xml:space="preserve">
		<value>Remove Fact Instance '{0}'</value>
		<comment>Text used to describe the transaction when removing a fact instance. {0}=instance name.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.RemoveObjectInstanceReferenceTransactionText" xml:space="preserve">
		<value>Remove Reference To '{0}' Instance '{1}'</value>
		<comment>Text used to describe the transaction when a reference an object instance is removed. {0}=type name {1}=instance name.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.RemoveObjectInstanceTransactionText" xml:space="preserve">
		<value>Remove '{0}' Instance '{1}'</value>
		<comment>Text used to describe the transaction when removing an object instance. {0}=type name {1}=instance name.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.SeparateObjectifiedInstanceIdentifierTransactionText" xml:space="preserve">
		<value>Separate '{0}' Identifier '{1}' from Objectified Instance '{2}'</value>
		<comment>Text used to describe the transaction when an identifier is separated from an objectified fact instance. {0}=type name, {1}=identifier instance name, {2}=fact instance name.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.WindowTitle" xml:space="preserve">
		<value>ORM Sample Population Editor</value>
		<comment>Text to place in the title bar of the sample population window.</comment>
	</data>
	<data name="ModelSamplePopulationEditor.EmptyDisplayText" xml:space="preserve">
		<value>Sample population is not available for the current selection.</value>
		<comment>Text to place in an empty sample population window.</comment>
	</data>
	<data name="ModelVerbalization.WindowTitle" xml:space="preserve">
		<value>ORM Verbalization Browser</value>
		<comment>Text to place in the title of the verbalization tool window.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.AbbreviationColumnHeader" xml:space="preserve">
		<value>Abbreviation</value>
		<comment>Column header for the first 'Abbreviation' column in the name generator abbreviations dialog</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.ElementColumnHeader" xml:space="preserve">
		<value>Element</value>
		<comment>Column header for the first 'Element' column in the name generator abbreviations dialog</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.NewItemText" xml:space="preserve">
		<value>New&#x2026;</value>
		<comment>Text displayed for new item dropdown in name generator abbreviations dialog.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.TitleFormatString" xml:space="preserve">
		<value>Abbreviations: {0}</value>
		<comment>Format string for the title of the name generator abbreviations dialog. Replacement fields: 0=NameGenerator name.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.TitleFormatStringWithNameUsage" xml:space="preserve">
		<value>Abbreviations: {0} ({1})</value>
		<comment>Format string for the title of the name generator abbreviations dialog. Replacement fields: 0=NameGenerator name, 1=NameUsage name.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.Editor.TransactionName" xml:space="preserve">
		<value>Edit Abbreviations</value>
		<comment>Transaction name when the name generator abbreviations dialog is committed. Displays in the Visual Studio undo and redo dropdowns.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.PropertyDescriptor.Description" xml:space="preserve">
		<value>Specify abbreviations for elements in the selected name generation context.</value>
		<comment>Description shown in the properties window for the 'Abbreviations' property of a NameGenerator.</comment>
	</data>
	<data name="NameGeneratorAbbreviations.PropertyDescriptor.DisplayName" xml:space="preserve">
		<value>Abbreviations</value>
		<comment>Display name shown in the properties window for the custom 'Abbreviations' property of a NameGenerator.</comment>
	</data>
	<data name="PathedRolePurpose.PostInnerJoin" xml:space="preserve">
		<value>PostInnerJoin</value>
	</data>
	<data name="PathedRolePurpose.PostOuterJoin" xml:space="preserve">
		<value>PostOuterJoin</value>
	</data>
	<data name="PathedRolePurpose.SameFactType" xml:space="preserve">
		<value>SameFactType</value>
	</data>
	<data name="PathedRolePurpose.StartRole" xml:space="preserve">
		<value>StartRole</value>
	</data>
	<data name="ReferenceMode.PredicateInverseReading" xml:space="preserve">
		<value>{0} is of {1}</value>
		<comment>The inverse reading for the predicate created by setting the ref mode.</comment>
	</data>
	<data name="ReferenceMode.PredicateReading" xml:space="preserve">
		<value>{0} has {1}</value>
		<comment>The reading for the predicate created by setting the ref mode.</comment>
	</data>
	<data name="ReferenceModeType.General" xml:space="preserve">
		<value>General</value>
	</data>
	<data name="ReferenceModeType.Popular" xml:space="preserve">
		<value>Popular</value>
	</data>
	<data name="ReferenceModeType.UnitBased" xml:space="preserve">
		<value>UnitBased</value>
	</data>
	<data name="RingConstraintType.Acyclic" xml:space="preserve">
		<value>Acyclic</value>
	</data>
	<data name="RingConstraintType.AcyclicIntransitive" xml:space="preserve">
		<value>Acyclic and Intransitive</value>
	</data>
	<data name="RingConstraintType.AcyclicStronglyIntransitive" xml:space="preserve">
		<value>Acyclic and Strongly Intransitive</value>
	</data>
	<data name="RingConstraintType.AcyclicTransitive" xml:space="preserve">
		<value>Acyclic and Transitive</value>
	</data>
	<data name="RingConstraintType.Antisymmetric" xml:space="preserve">
		<value>Antisymmetric</value>
	</data>
	<data name="RingConstraintType.Asymmetric" xml:space="preserve">
		<value>Asymmetric</value>
	</data>
	<data name="RingConstraintType.AsymmetricIntransitive" xml:space="preserve">
		<value>Asymmetric and Intransitive</value>
	</data>
	<data name="RingConstraintType.AsymmetricStronglyIntransitive" xml:space="preserve">
		<value>Asymmetric and Strongly Intransitive</value>
	</data>
	<data name="RingConstraintType.Description.Acyclic" xml:space="preserve">
		<value>Acyclic:&#xd;&#xa;No A may cycle back to itself via one or more traversals through &#x201c;A relates to A&#x201d;.</value>
	</data>
	<data name="RingConstraintType.Description.Antisymmetric" xml:space="preserve">
		<value>Antisymmetric:&#xd;&#xa;If A1 relates to A2 and A1 is not A2&#xd;&#xa;   then it is impossible that A2 relates to A1.</value>
	</data>
	<data name="RingConstraintType.Description.Asymmetric" xml:space="preserve">
		<value>Asymmetric:&#xd;&#xa;If A1 relates to A2&#xd;&#xa;   then it is impossible that A2 relates to A1.</value>
	</data>
	<data name="RingConstraintType.Description.Intransitive" xml:space="preserve">
		<value>Intransitive:&#xd;&#xa;If A1 relates to A2 and A2 relates to A3&#xd;&#xa;   then it is impossible that A1 relates to A3.</value>
	</data>
	<data name="RingConstraintType.Description.Irreflexive" xml:space="preserve">
		<value>Irreflexive:&#xd;&#xa;No A relates to itself.</value>
	</data>
	<data name="RingConstraintType.Description.PurelyReflexive" xml:space="preserve">
		<value>Purely Reflexive:&#xd;&#xa;If A1 relates to some A2&#xd;&#xa;   then A1 = A2.</value>
	</data>
	<data name="RingConstraintType.Description.Reflexive" xml:space="preserve">
		<value>Reflexive:&#xd;&#xa;If A1 relates to some A2&#xd;&#xa;   then A1 relates to itself.</value>
	</data>
	<data name="RingConstraintType.Description.StronglyIntransitive" xml:space="preserve">
		<value>Strongly Intransitive:&#xd;&#xa;If A1 relates to some A2&#xd;&#xa;   then it is not true that A1 is indirectly related to A2 by repeatedly applying this fact type.</value>
	</data>
	<data name="RingConstraintType.Description.Symmetric" xml:space="preserve">
		<value>Symmetric:&#xd;&#xa;If A1 relates to A2&#xd;&#xa;   then A2 relates to A1.</value>
	</data>
	<data name="RingConstraintType.Description.Transitive" xml:space="preserve">
		<value>Transitive:&#xd;&#xa;If A1 relates to A2 and A2 relates to A3&#xd;&#xa;   then A1 relates to A3.</value>
	</data>
	<data name="RingConstraintType.Intransitive" xml:space="preserve">
		<value>Intransitive</value>
	</data>
	<data name="RingConstraintType.Irreflexive" xml:space="preserve">
		<value>Irreflexive</value>
	</data>
	<data name="RingConstraintType.PurelyReflexive" xml:space="preserve">
		<value>Purely Reflexive</value>
	</data>
	<data name="RingConstraintType.Reflexive" xml:space="preserve">
		<value>Reflexive</value>
	</data>
	<data name="RingConstraintType.ReflexiveAntisymmetric" xml:space="preserve">
		<value>Reflexive and Antisymmetric</value>
	</data>
	<data name="RingConstraintType.ReflexiveSymmetric" xml:space="preserve">
		<value>Reflexive and Symmetric</value>
	</data>
	<data name="RingConstraintType.ReflexiveTransitive" xml:space="preserve">
		<value>Reflexive and Transitive</value>
	</data>
	<data name="RingConstraintType.ReflexiveTransitiveAntisymmetric" xml:space="preserve">
		<value>Reflexive, Transitive and Antisymmetric</value>
	</data>
	<data name="RingConstraintType.StronglyIntransitive" xml:space="preserve">
		<value>Strongly Intransitive</value>
	</data>
	<data name="RingConstraintType.Symmetric" xml:space="preserve">
		<value>Symmetric</value>
	</data>
	<data name="RingConstraintType.SymmetricIntransitive" xml:space="preserve">
		<value>Symmetric and Intransitive</value>
	</data>
	<data name="RingConstraintType.SymmetricIrreflexive" xml:space="preserve">
		<value>Symmetric and Irreflexive</value>
	</data>
	<data name="RingConstraintType.SymmetricStronglyIntransitive" xml:space="preserve">
		<value>Symmetric and Strongly Intransitive</value>
	</data>
	<data name="RingConstraintType.SymmetricTransitive" xml:space="preserve">
		<value>Symmetric and Transitive</value>
	</data>
	<data name="RingConstraintType.Transitive" xml:space="preserve">
		<value>Transitive</value>
	</data>
	<data name="RingConstraintType.TransitiveIrreflexive" xml:space="preserve">
		<value>Transitive and Irreflexive</value>
	</data>
	<data name="RingConstraintType.TransitiveAntisymmetric" xml:space="preserve">
		<value>Transitive and Antisymmetric</value>
	</data>
	<data name="RingConstraintType.TransitiveAsymmetric" xml:space="preserve">
		<value>Transitive and Asymmetric</value>
	</data>
	<data name="RingConstraintType.Undefined" xml:space="preserve">
		<value>Undefined</value>
	</data>
	<data name="Role.SurveyNameFormat" xml:space="preserve">
		<value>{0} ({1})</value>
		<comment>The format string for a selected role when a role name is specified. {0}=ObjectType Name, {1}=Role Name</comment>
	</data>
	<data name="Role.SurveyNameMissingRolePlayer" xml:space="preserve">
		<value>Missing</value>
		<comment>The name for a role name in place of an ObjectType name when no role player is specified.</comment>
	</data>
	<data name="RoleMultiplicity.ExactlyOne" xml:space="preserve">
		<value>1</value>
	</data>
	<data name="RoleMultiplicity.Indeterminate" xml:space="preserve">
		<value>Indeterminate</value>
	</data>
	<data name="RoleMultiplicity.OneToMany" xml:space="preserve">
		<value>1..*</value>
	</data>
	<data name="RoleMultiplicity.Unspecified" xml:space="preserve">
		<value>Unspecified</value>
	</data>
	<data name="RoleMultiplicity.ZeroToMany" xml:space="preserve">
		<value>*</value>
	</data>
	<data name="RoleMultiplicity.ZeroToOne" xml:space="preserve">
		<value>0..1</value>
	</data>
	<data name="SchemaValidationFailure.Instructions" xml:space="preserve">
		<value>Xml Schema validation of the .ORM file has failed.&#xd;&#xa;You can attempt to open the file without schema validation by reattempting the File/Open command while holding down the shift key.&#xd;&#xa;Detailed exception information:&#xd;&#xa;&#xd;&#xa;{0}</value>
		<comment>Text used to display instructions when a load fails due to schema validation issues</comment>
	</data>
	<data name="NameGeneratorCasingOption.None" xml:space="preserve">
		<value>None</value>
	</data>
	<data name="NameGeneratorCasingOption.Camel" xml:space="preserve">
		<value>Camel</value>
	</data>
	<data name="NameGeneratorCasingOption.Pascal" xml:space="preserve">
		<value>Pascal</value>
	</data>
	<data name="NameGeneratorCasingOption.Upper" xml:space="preserve">
		<value>Upper</value>
	</data>
	<data name="NameGeneratorCasingOption.Lower" xml:space="preserve">
		<value>Lower</value>
	</data>
	<data name="NameGeneratorSpacingFormat.Remove" xml:space="preserve">
		<value>Remove</value>
	</data>
	<data name="NameGeneratorSpacingFormat.Retain" xml:space="preserve">
		<value>Retain</value>
	</data>
	<data name="NameGeneratorSpacingFormat.ReplaceWith" xml:space="preserve">
		<value>ReplaceWith</value>
	</data>
	<data name="ObjectModel.Constraint.Name.Description" xml:space="preserve">
		<value>The name of the Constraint. Constraint names must be unique within the ORM model.</value>
		<comment>The description for the Name property of a constraint.</comment>
	</data>
	<data name="ObjectModel.DataType.Length.ExactLengthDescription" xml:space="preserve">
		<value>The exact length of values with this DataType.</value>
		<comment>An alternate description for the DataType.Length property. The default description describes a variable length.</comment>
	</data>
	<data name="ObjectModel.DataType.Precision" xml:space="preserve">
		<value>DataTypePrecision</value>
		<comment>An alternate display name for the DataType.Length property.</comment>
	</data>
	<data name="ObjectModel.DataType.Precision.Description" xml:space="preserve">
		<value>The total number of all digits allowed in a value with this DataType.</value>
		<comment>An alternate description for the DataType.Length property.</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Logical.TrueOrFalse.Text" xml:space="preserve">
		<value>Logical: True or False</value>
		<comment>A true or false logical data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Logical.YesOrNo.Text" xml:space="preserve">
		<value>Logical: Yes or No</value>
		<comment>A yes or no logical data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.AutoCounter.Text" xml:space="preserve">
		<value>Numeric: Auto Counter</value>
		<comment>An auto counter numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.Decimal.Text" xml:space="preserve">
		<value>Numeric: Decimal</value>
		<comment>A decimal numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.DoublePrecisionFloatingPoint.Text" xml:space="preserve">
		<value>Numeric: Float (Double Precision)</value>
		<comment>A double precision floating point numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.FloatingPoint.Text" xml:space="preserve">
		<value>Numeric: Float (Custom Precision)</value>
		<comment>A custom precision floating point numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.Money.Text" xml:space="preserve">
		<value>Numeric: Money</value>
		<comment>A money numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.SignedInteger.Text" xml:space="preserve">
		<value>Numeric: Signed Integer</value>
		<comment>A signed integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.SignedLargeInteger.Text" xml:space="preserve">
		<value>Numeric: Signed Big Integer</value>
		<comment>A signed large integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.SignedSmallInteger.Text" xml:space="preserve">
		<value>Numeric: Signed Small Integer</value>
		<comment>A signed small integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.SinglePrecisionFloatingPoint.Text" xml:space="preserve">
		<value>Numeric: Float (Single Precision)</value>
		<comment>A single precision floating point numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.UnsignedInteger.Text" xml:space="preserve">
		<value>Numeric: Unsigned Integer</value>
		<comment>An unsigned integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.UnsignedLargeInteger.Text" xml:space="preserve">
		<value>Numeric: Unsigned Big Integer</value>
		<comment>An unsigned large integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.UnsignedSmallInteger.Text" xml:space="preserve">
		<value>Numeric: Unsigned Small Integer</value>
		<comment>An unsigned small integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Numeric.UnsignedTinyInteger.Text" xml:space="preserve">
		<value>Numeric: Unsigned Tiny Integer</value>
		<comment>An unsigned tiny integer numeric data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Other.ObjectId.Text" xml:space="preserve">
		<value>Other: Object ID</value>
		<comment>An object id data type (can not be classified in any of the groups above)</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Other.RowId.Text" xml:space="preserve">
		<value>Other: Row ID</value>
		<comment>A row id data type (can not be classified in any of the groups above)</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.RawData.FixedLength.Text" xml:space="preserve">
		<value>Raw Data: Fixed Length</value>
		<comment>A fixed length raw data data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.RawData.LargeLength.Text" xml:space="preserve">
		<value>Raw Data: Large Length</value>
		<comment>A large length raw data data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.RawData.OleObject.Text" xml:space="preserve">
		<value>Raw Data: OLE Object</value>
		<comment>An OLE object raw data data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.RawData.Picture.Text" xml:space="preserve">
		<value>Raw Data: Picture</value>
		<comment>A picture raw data data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.RawData.VariableLength.Text" xml:space="preserve">
		<value>Raw Data: Variable Length</value>
		<comment>A variable length raw data data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Temporal.AutoTimestamp.Text" xml:space="preserve">
		<value>Temporal: Auto Timestamp</value>
		<comment>An auto timestamp temporal data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Temporal.Date.Text" xml:space="preserve">
		<value>Temporal: Date</value>
		<comment>A date temporal data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Temporal.DateAndTime.Text" xml:space="preserve">
		<value>Temporal: Date &amp; Time</value>
		<comment>A date and time temporal data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Temporal.Time.Text" xml:space="preserve">
		<value>Temporal: Time</value>
		<comment>A time temporal data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Text.FixedLength.Text" xml:space="preserve">
		<value>Text: Fixed Length</value>
		<comment>A fixed length text data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Text.LargeLength.Text" xml:space="preserve">
		<value>Text: Large Length</value>
		<comment>A large length text data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Text.VariableLength.Text" xml:space="preserve">
		<value>Text: Variable Length</value>
		<comment>A variable length text data type</comment>
	</data>
	<data name="ObjectModel.DataType.PortableDataType.Unspecified.Text" xml:space="preserve">
		<value>&lt;Data Type Not Set&gt;</value>
		<comment>The descriptive text for a PortableDataType of Unspecified.</comment>
	</data>
	<data name="ObjectModel.Editors.NestedFactTypePicker.NullItemText" xml:space="preserve">
		<value>&lt;Not Objectified&gt;</value>
		<comment>The name displayed to represent null in the nested fact type picker</comment>
	</data>
	<data name="ObjectModel.Editors.NestingTypePicker.NullItemText" xml:space="preserve">
		<value>&lt;No Objectification&gt;</value>
		<comment>The name displayed to represent null in the nesting type picker</comment>
	</data>
	<data name="ObjectModel.Editors.RolePlayerPicker.NullItemText" xml:space="preserve">
		<value>&lt;Role Player Not Set&gt;</value>
		<comment>The name displayed to represent null in the role player picker</comment>
	</data>
	<data name="ObjectModel.EntityType" xml:space="preserve">
		<value>EntityType</value>
		<comment>The display name used for an ObjectType when IsValueType is false</comment>
	</data>
	<data name="ObjectModel.EntityType.DefaultNamePattern" xml:space="preserve">
		<value>EntityType{0}</value>
		<comment>The base name used to create a name for a new EntityType. This is a format string</comment>
	</data>
	<data name="ObjectModel.ImpliedMandatoryConstraint" xml:space="preserve">
		<value>ImpliedMandatoryConstraint</value>
		<comment>The display name used for an implied mandatory constraint</comment>
	</data>
	<data name="ObjectModel.InternalUniquenessConstraint" xml:space="preserve">
		<value>InternalUniquenessConstraint</value>
		<comment>The display name used for an internal uniqueness constraint</comment>
	</data>
	<data name="ObjectModel.Model.ModelErrorDisplayFilterDisplay.Description" xml:space="preserve">
    <value>Validation error display options for this model. Control error display by category and individually.</value>
		<comment>Description for &lt;see cref=&quot;P:ObjectModel.ORMModel.ModelErrorDisplayFilterDisplay&quot;/&gt;</comment>
  </data>
	<data name="ObjectModel.Model.ModelErrorDisplayFilterDisplay.DisplayName" xml:space="preserve">
    <value>ErrorDisplay</value>
		<comment>Display name for &lt;see cref=&quot;P:ObjectModel.ORMModel.ModelErrorDisplayFilterDisplay&quot;/&gt;</comment>
  </data>
	<data name="ObjectModel.Model.Name.Description" xml:space="preserve">
		<value>The name of the ORM model.</value>
		<comment>The description for the Name property of an ORMModel.</comment>
	</data>
	<data name="ObjectModel.ObjectType.CardinalityDisplay.Description" xml:space="preserve">
		<value>Set the cardinality of a population for this object type. The following patterns are recognized:&#xd;&#xa;&#xd;&#xa;Range with a zero lower bound: 0..n, ..n, &lt;n, &lt;=n&#xd;&#xa;Range with no upper bound: &gt;n, &gt;=n, n..&#xd;&#xa;Fixed range: n..m&#xd;&#xa;&#xd;&#xa;Cardinality supports multiple non-overlapping ranges and single values. A range of 0 indicates that an empty population is allowed. For example, 0,4.. will allow either an empty population or a population with four or more instances.</value>
		<comment>Description for the &lt;see cref=&quot;ObjectModel.ObjectType.CardinalityDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.ObjectType.CardinalityDisplay.DisplayName" xml:space="preserve">
		<value>CardinalityConstraint</value>
		<comment>Display name for the &lt;see cref=&quot;ObjectModel.ObjectType.CardinalityDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.ObjectType.DataTypeDisplay.Description" xml:space="preserve">
		<value>The DataType for this ValueType, or the DataType for the identifying ValueType if this is an EntityType.
    This is a portable DataType. The final physical DataType is dependent on the generation target.</value>
		<comment>Description for &lt;see cref=&quot;ObjectModel.ObjectType.DataTypeDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.ObjectType.DataTypeDisplay.DisplayName" xml:space="preserve">
		<value>DataType</value>
		<comment>Display name for &lt;see cref=&quot;ObjectModel.ObjectType.DataTypeDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.ObjectType.Name.Description" xml:space="preserve">
		<value>The name of the ObjectType. ObjectType names must be unique within the ORM model.</value>
		<comment>The description for the Name property of an ObjectType.</comment>
	</data>
	<data name="ObjectModel.ObjectifiedFactType" xml:space="preserve">
		<value>ObjectifiedFactType</value>
		<comment>The display name used for an objectified (nested) FactType</comment>
	</data>
	<data name="ObjectModel.ReferenceMode.KindDisplay.Description" xml:space="preserve">
		<value>The kind of the reference mode pattern. One of Popular, UnitBase, or General.</value>
		<comment>Description for &lt;see cref=&quot;ObjectModel.ReferenceMode.KindDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.ReferenceMode.KindDisplay.DisplayName" xml:space="preserve">
		<value>Kind</value>
		<comment>Display name for &lt;see cref=&quot;ObjectModel.ReferenceMode.KindDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.Role.CardinalityDisplay.Description" xml:space="preserve">
		<value>Restrict the cardinality of a population for this unary role. The following patterns are recognized:&#xd;&#xa;&#xd;&#xa;Range with a zero lower bound: 0..n, ..n, &lt;n, &lt;=n&#xd;&#xa;Range with no upper bound: &gt;n, &gt;=n, n..&#xd;&#xa;Fixed range: n..m&#xd;&#xa;&#xd;&#xa;Cardinality supports multiple non-overlapping ranges and single values. A range of 0 indicates that an empty population is allowed. For example, 0,4.. will allow either an empty population or a population with four or more instances.</value>
		<comment>Description for the &lt;see cref=&quot;ObjectModel.ObjectType.CardinalityDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.Role.CardinalityDisplay.DisplayName" xml:space="preserve">
		<value>CardinalityConstraint</value>
		<comment>Display name for the &lt;see cref=&quot;ObjectModel.ObjectType.CardinalityDisplay&quot;/&gt;</comment>
	</data>
	<data name="ObjectModel.Role.RolePlayerDisplay.Description" xml:space="preserve">
    <value>The ObjectType that plays this Role.</value>
		<comment>Description for &lt;see cref=&quot;ObjectModel.Role.RolePlayerDisplay&quot;/&gt;</comment>
  </data>
	<data name="ObjectModel.Role.RolePlayerDisplay.DisplayName" xml:space="preserve">
    <value>RolePlayer</value>
		<comment>Display name for &lt;see cref=&quot;ObjectModel.Role.RolePlayerDisplay&quot;/&gt;</comment>
  </data>
	<data name="ObjectModel.SimpleMandatoryConstraint" xml:space="preserve">
		<value>SimpleMandatoryConstraint</value>
		<comment>The display name used for a simple mandatory constraint</comment>
	</data>
	<data name="ObjectModel.SubtypeFact.Name.Description" xml:space="preserve">
		<value>The generated name for this Subtype relationship.</value>
		<comment>The description for the Name property of a SubtypeFact.</comment>
	</data>
	<data name="ObjectModel.UniquenessConstraint" xml:space="preserve">
		<value>ExternalUniquenessConstraint</value>
		<comment>The display name used for an external uniqueness constraint</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.ClosedInclusion.LowerDelimiter" xml:space="preserve">
		<value>[</value>
		<comment>One character with possible spaces for the closed lower bound of a value range.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.ClosedInclusion.UpperDelimiter" xml:space="preserve">
		<value>]</value>
		<comment>One character with possible spaces for the closed upper bound of a value range.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.DefinitionContainer.OpenDelimiter" xml:space="preserve">
		<value>{</value>
		<comment>Opening delimiter to contain one or more value ranges.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.DefinitionContainer.CloseDelimiter" xml:space="preserve">
		<value>}</value>
		<comment>Closing delimiter to contain one or more value ranges.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.OpenInclusion.LowerDelimiter" xml:space="preserve">
		<value>(</value>
		<comment>One character with possible spaces for the open lower bound of a value range.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.OpenInclusion.UpperDelimiter" xml:space="preserve">
		<value>)</value>
		<comment>One character with possible spaces for the open upper bound of a value range.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.StringDelimiter" xml:space="preserve">
		<value>'</value>
		<comment>The string delimiter character. Used to open and close strings. Doubling this character in a string results in the string in the final result.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.ValueDelimiter" xml:space="preserve">
		<value>..</value>
		<comment>String used to delimit the min- and max-values of a value range.</comment>
	</data>
	<data name="ObjectModel.ValueConstraint.ValueRangeRegexPattern" xml:space="preserve">
		<value><![CDATA[(?n)\s*((?<MinClosedInclusion>\[)|(?<MinOpenInclusion>\())?\s*(?<MinValue>(((?!\.\.)[^'])+|('.*?')+)*)\s*(?<RangeDelimiter>\.\.)?\s*(?<MaxValue>(((?!(]|\)))[^'])+|('.*?')+)*)\s*((?<MaxClosedInclusion>])|(?<MaxOpenInclusion>\)))?\s*]]></value>
		<comment><![CDATA[A regex pattern used for extracting parts of a single value range.
This string contains a number of other resource values, escaped for use in a regex expression. The format string and replacements are:
(?n)\s*((?&lt;MinClosedInclusion>{2})|(?&lt;MinOpenInclusion>{4}))?\s*(?&lt;MinValue>(((?!{1})[^{0}])+|({0}.*?{0})+)*)\s*(?&lt;RangeDelimiter>{1})?\s*(?&lt;MaxValue>(((?!({3}|{5}))[^{0}])+|({0}.*?{0})+)*)\s*((?&lt;MaxClosedInclusion>{3})|(?&lt;MaxOpenInclusion>{5}))?\s*]]>
{0}=ObjectModel.ValueConstraint.StringDelimiter
{1}=ObjectModel.ValueConstraint.ValueDelimiter
The remaining replacements are trimmed for leading/trailing whitespace
{2}=ObjectModel.ValueConstraint.ClosedInclusion.LowerDelimiter
{3}=ObjectModel.ValueConstraint.ClosedInclusion.UpperDelimiter
{4}=ObjectModel.ValueConstraint.OpenInclusion.LowerDelimiter
{5}=ObjectModel.ValueConstraint.OpenInclusion.UpperDelimiter</comment>
	</data>
	<data name="ObjectModel.ValueType" xml:space="preserve">
		<value>ValueType</value>
		<comment>The display name used for an ObjectType when IsValueType is true</comment>
	</data>
	<data name="ObjectModel.ValueType.DefaultNamePattern" xml:space="preserve">
		<value>ValueType{0}</value>
		<comment>The base name used to create a name for a new ValueType. This is a format string with {0} being the placeholder for the number placement.</comment>
	</data>
	<data name="ObjectModel.ValueType.AutoCreateReferenceModeNamePattern" xml:space="preserve">
		<value>{0}_RefMode{1}</value>
		<comment>Used to automatically turn a value type into an entity type with a reference mode when IsValueType is set to false and the ValueType has downstream value roles. Replacement field {0} is the name of the exisiting type and field {1} is used to insert a number to ensure that the name is unique. {0}Values{1} is the default format.</comment>
	</data>
	<data name="ORMModelBrowserDynamicColor.Background">
		<value xml:space="preserve">BrowserBackground</value>
		<comment xml:space="preserve">The display name for the dynamic model browser background color.</comment>
	</data>
	<data name="ORMModelBrowserDynamicColor.Background.Description">
		<value xml:space="preserve">The background color  in the ORM model browser for elements in this group.</value>
		<comment xml:space="preserve">The description of the dynamic background color in the ORM model browser.</comment>
	</data>
	<data name="ORMModelBrowserDynamicColor.Category">
		<value xml:space="preserve">Custom Model Browser Colors</value>
		<comment xml:space="preserve">The display name for the category used for custom model browser colors.</comment>
	</data>
	<data name="ORMModelBrowserDynamicColor.Foreground">
		<value xml:space="preserve">BrowserForeground</value>
		<comment xml:space="preserve">The display name for the dynamic model browser foreground color.</comment>
	</data>
	<data name="ORMModelBrowserDynamicColor.Foreground.Description">
		<value xml:space="preserve">The foreground color for text in the ORM model browser for elements in this group.</value>
		<comment xml:space="preserve">The description of the dynamic foreground color in the ORM model browser.</comment>
	</data>
	<data name="ReferenceModeNamingChoice.CustomFormat" xml:space="preserve">
		<value>Custom Format</value>
		<comment>The displayed form of the CustomFormat enum value</comment>
	</data>
	<data name="ReferenceModeNamingChoice.EntityTypeName" xml:space="preserve">
		<value>EntityType Name</value>
		<comment>The displayed form of the EntityTypeName enum value</comment>
	</data>
	<data name="ReferenceModeNamingChoice.ModelDefault" xml:space="preserve">
		<value>Context Default</value>
		<comment>The displayed form of the ReferenceModeName enum value</comment>
	</data>
	<data name="ReferenceModeNamingChoice.ReferenceModeName" xml:space="preserve">
		<value>ReferenceMode Name</value>
		<comment>The displayed form of the ReferenceModeName enum value</comment>
	</data>
	<data name="ReferenceModeNamingChoice.ValueTypeName" xml:space="preserve">
		<value>ValueType Name</value>
		<comment>The displayed form of the ValueTypeName enum value</comment>
	</data>
	<data name="Subquery.SignatureFormat" xml:space="preserve">
		<value>({0})-&gt;{{{1}}}</value>
		<comment>The general structure for the signature of a subquery. {0}=parameter list, {1}=role list</comment>
	</data>
	<data name="Subquery.NamedArgumentFormat" xml:space="preserve">
		<value>{1} ({0})</value>
		<comment>The format string used to combine a parameter or role and and the parameter or role type in a subquery signature. {0}=item name, {1}=item type</comment>
	</data>
	<data name="SubtypeFact.ComponentNameFormat" xml:space="preserve">
		<value>{0}-&gt;{1}</value>
		<comment>String for generating a component name for a subtype. The {0} replacement field is used for the subtype component name; {1} for the supertype.</comment>
	</data>
	<data name="SubtypeFact.DefaultReadingText" xml:space="preserve">
		<value>{0} is a subtype of {1}</value>
		<comment>The format string for the default reading of a subtype. The {0} replacement field is used for the subtype element name; {1} for the supertype.</comment>
	</data>
	<data name="SubtypeFact.ElementNameFormat" xml:space="preserve">
		<value>{0}IsASubtypeOf{1}</value>
		<comment>The format string for the generated name of a subtype relationship. The {0} replacement field is used for the subtype element name; {1} for the supertype.</comment>
	</data>
	<data name="SubtypeFact.PredicateInverseReading" xml:space="preserve">
		<value>{0} is {1}</value>
		<comment>The inverse instance reading for the predicate created by creating a sub type relationship.</comment>
	</data>
	<data name="SubtypeFact.PredicateReading" xml:space="preserve">
		<value>{0} is {1}</value>
		<comment>The instance reading for the forward predicate created by creating a subtype relationship.</comment>
	</data>
	<data name="SurveyElementType.ExternalConstraint" xml:space="preserve">
		<value>External Constraints</value>
	</data>
	<data name="SurveyElementType.FactType" xml:space="preserve">
		<value>Fact Types</value>
	</data>
	<data name="SurveyElementType.ObjectType" xml:space="preserve">
		<value>Object Types</value>
	</data>
	<data name="SurveyElementType.NameGenerator" xml:space="preserve">
		<value>Name Generation Settings</value>
	</data>
	<data name="SurveyElementType.Grouping" xml:space="preserve">
		<value>Groups</value>
	</data>
	<data name="SurveyFactTypeDetailType.Role" xml:space="preserve">
		<value>Roles</value>
	</data>
	<data name="SurveyFactTypeDetailType.InternalConstraint" xml:space="preserve">
		<value>Internal Constraints</value>
	</data>
	<data name="SurveyFactTypeDetailType.ImpliedFactType" xml:space="preserve">
		<value>Implied Fact Types</value>
	</data>
	<data name="ValueComparisonOperator.Undefined" xml:space="preserve">
		<value>Undefined</value>
	</data>
	<data name="ValueComparisonOperator.Equal" xml:space="preserve">
		<value>=</value>
	</data>
	<data name="ValueComparisonOperator.NotEqual" xml:space="preserve">
		<value>&#x2260;</value>
	</data>
	<data name="ValueComparisonOperator.LessThan" xml:space="preserve">
		<value>&lt;</value>
	</data>
	<data name="ValueComparisonOperator.GreaterThan" xml:space="preserve">
		<value>&gt;</value>
	</data>
	<data name="ValueComparisonOperator.LessThanOrEqual" xml:space="preserve">
		<value>&#x2264;</value>
	</data>
	<data name="ValueComparisonOperator.GreaterThanOrEqual" xml:space="preserve">
		<value>&#x2265;</value>
	</data>
	<data name="Verbalization.ReportSnippetsDefaultDescription" xml:space="preserve">
		<value>Default Report</value>
		<comment>The description for the default verbalization report snippets.</comment>
	</data>
	<data name="Verbalization.ReportSnippetsTypeDescription" xml:space="preserve">
		<value>Report Verbalization</value>
		<comment>The description for the snippets associated with the verbalization reports.</comment>
	</data>
	<data name="Verbalization.SnippetsDefaultDescription" xml:space="preserve">
		<value>Default Verbalization</value>
		<comment>The description for the default verbalization snippets for the core model.</comment>
	</data>
	<data name="Verbalization.SnippetsTypeDescription" xml:space="preserve">
		<value>Core ORM Verbalization</value>
		<comment>The description for the verbalization snippets associated with the core model.</comment>
	</data>
	<data name="VerbalizationReportContent.All" xml:space="preserve">
		<value>All Model Elements</value>
	</data>
	<data name="VerbalizationReportContent.AllConstraints" xml:space="preserve">
		<value>All Constraints</value>
	</data>
	<data name="VerbalizationReportContent.AllSetComparisonConstraints" xml:space="preserve">
		<value>All Set Comparison Constraints</value>
	</data>
	<data name="VerbalizationReportContent.AllSetConstraints" xml:space="preserve">
		<value>All Set Constraints</value>
	</data>
	<data name="VerbalizationReportContent.DisjunctiveMandatoryConstraints" xml:space="preserve">
		<value>InclusiveOr Constraints</value>
	</data>
	<data name="VerbalizationReportContent.EqualityConstraints" xml:space="preserve">
		<value>Equality Constraints</value>
	</data>
	<data name="VerbalizationReportContent.ExclusionConstraints" xml:space="preserve">
		<value>Exclusion Constraints</value>
	</data>
	<data name="VerbalizationReportContent.ExternalUniquenessConstraints" xml:space="preserve">
		<value>External Uniqueness Constraints</value>
	</data>
	<data name="VerbalizationReportContent.FactTypes" xml:space="preserve">
		<value>Fact Types</value>
	</data>
	<data name="VerbalizationReportContent.FrequencyConstraints" xml:space="preserve">
		<value>Frequency Constraints</value>
	</data>
	<data name="VerbalizationReportContent.InternalUniquenessConstraints" xml:space="preserve">
		<value>Internal Uniqueness Constraints</value>
	</data>
	<data name="VerbalizationReportContent.ObjectTypes" xml:space="preserve">
		<value>Object Types</value>
	</data>
	<data name="VerbalizationReportContent.RingConstraints" xml:space="preserve">
		<value>Ring Constraints</value>
	</data>
	<data name="VerbalizationReportContent.SimpleMandatoryConstraints" xml:space="preserve">
		<value>Simple Mandatory Constraints</value>
	</data>
	<data name="VerbalizationReportContent.SubsetConstraints" xml:space="preserve">
		<value>Subset Constraints</value>
	</data>
	<data name="VerbalizationReportContent.SuperTypes" xml:space="preserve">
		<value>Supertypes</value>
	</data>
	<data name="VerbalizationReportContent.ValidationReport" xml:space="preserve">
		<value>Validation Report</value>
	</data>
	<data name="VerbalizationReportContent.ValueComparisonConstraints" xml:space="preserve">
		<value>Value Comparison Constraints</value>
	</data>
	<data name="VerbalizationTarget.HtmlReport.DisplayName" xml:space="preserve">
		<value>Html Report Settings</value>
		<comment>Description for target HtmlReport customizations. Displays in the verbalization customizations dropdown in the options page.</comment>
	</data>
	<data name="VerbalizationTarget.HtmlReport.CommandName" xml:space="preserve">
		<value>&amp;Html Report...</value>
		<comment>Description for target HtmlReport command name. Displays in the GenerateReport submenu on the context menu.</comment>
	</data>
	<data name="VerbalizationTarget.VerbalizationBrowser.DisplayName" xml:space="preserve">
		<value>Browser Settings</value>
		<comment>Description for target VerbalizationBrowser customizations. Displays in the verbalization customizations dropdown in the options page.</comment>
	</data>
</root>
